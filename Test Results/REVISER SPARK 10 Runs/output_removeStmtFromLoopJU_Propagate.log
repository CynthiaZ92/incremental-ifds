Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 03:10:41 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 5.6 seconds.
[Spark] Type masks in 0.1 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 70.2 seconds.
[Spark] Solution found in 70.2 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.233878149 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 435.881510828seconds.
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair args,[args := @parameter1: java.lang.String[]]
Pair $b0,[$b0 = 0]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair result,[result = $r0]
Pair $b0,[$b0 = 1]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
l6 -> [l6 = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
listener -> [listener = $r10]
failure -> [failure = $r9]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
result -> [result = $r0]
each -> [each = l8[l6]]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r1 = $r0[l1]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
e -> [e = $r7]
l8 -> [l8 = args]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 0]
classes -> [classes = $r4]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r10 -> [$r10 = new org.junit.internal.TextListener]
l7 -> [l7 = lengthof args]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
each -> [each = (org.junit.runner.notification.Failure) $r14]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r1 = $r0[l1]]
description -> [$r1 = new org.junit.runner.Description]
l6 -> [l6 = l6 + 1]
$r14 -> [$r2 = $r1[l1]]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r2 = l2]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r3 -> [$r0 = new java.lang.String]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
args -> [args := @parameter1: java.lang.String[]]
ORIGINAL size: 44
Original call graph has 93305 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.70424E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 23.6 seconds.
[Spark] Solution found in 23.6 seconds.
Updating callgraph took 24.605126655 seconds, callgraph now has 93308 edges.
Updating reachable methods took 4.7119E-5 seconds
Graph patched in 25.151097996 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.41966216 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
CFG changeset computation took 2.731625683 seconds
Removing 31 expired nodes...
Expired nodes removed in 2.715684404 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 2.263768877 seconds
Actually processed 1 of 41 expired edges in 3.702263841 seconds
Processing worklist for values...
Worklist processing done, 5842 edges processed.
IDE results updated in 109.27658884 seconds.
--------------
NEW RESULTS
--------------
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r1 = $r0[l1]]
e -> [e = $r6]
result -> [result = $r0]
$r13 -> [$r2 = $r1[l1]]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
this -> [this := @this: org.junit.runner.JUnitCore]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
l7 -> [l7 = l7 + 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
classes -> [classes = $r4]
l9 -> [l9 = args]
$r4 -> [$r4 = new java.util.ArrayList]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
each -> [each = l9[l7]]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
l8 -> [l8 = lengthof args]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r2 = l2]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
description -> [$r1 = new org.junit.runner.Description]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
c -> [c = null]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r6 -> [$r6 := @caughtexception]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r3 -> [$r0 = new java.lang.String]
failure -> [failure = $r8]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r1 = $r0[l1]]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
args -> [args := @parameter1: java.lang.String[]]
listener -> [listener = $r9]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
l7 -> [l7 = 0]
New result: c -> [c = null]
Time elapsed: 576.195448945
Transforming TestRemoveLeakInFunction... 
Transforming DeleteInOutLoopTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming SimpleTest... 
Transforming TestRemoveNoLeakCall... 
Transforming FuncTypeTest... 
Transforming ExitTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeak... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 03:21:41 CET 2013
Soot has run for 10 min. 59 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 03:21:41 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.8 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 54.5 seconds.
[Spark] Solution found in 54.5 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.239425353 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 424.206550028seconds.
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair args,[args := @parameter1: java.lang.String[]]
Pair $b0,[$b0 = 0]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair result,[result = $r0]
Pair $b0,[$b0 = 1]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
l8 -> [l8 = args]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
e -> [e = $r7]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 1]
$r7 -> [$r7 := @caughtexception]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
each -> [each = (org.junit.runner.notification.Failure) $r14]
missingClasses -> [missingClasses = $r4]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r2 = $r1[l1]]
each -> [each = l8[l6]]
l6 -> [l6 = l6 + 1]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
l6 -> [l6 = 0]
result -> [result = $r0]
listener -> [listener = $r10]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r3 -> [$r0 = new java.lang.String]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = l2]
l7 -> [l7 = lengthof args]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
classes -> [classes = $r4]
this -> [this := @this: org.junit.runner.JUnitCore]
failure -> [failure = $r9]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
ORIGINAL size: 44
Original call graph has 93305 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.1984E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 19.0 seconds.
[Spark] Solution found in 19.0 seconds.
Updating callgraph took 19.870155433 seconds, callgraph now has 93308 edges.
Updating reachable methods took 7.003E-6 seconds
Graph patched in 20.109165471 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 33.784677514 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
CFG changeset computation took 2.652894306 seconds
Removing 31 expired nodes...
Expired nodes removed in 2.631332565 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 1.369779358 seconds
Actually processed 1 of 41 expired edges in 4.557847967 seconds
Processing worklist for values...
Worklist processing done, 5833 edges processed.
IDE results updated in 101.588991629 seconds.
--------------
NEW RESULTS
--------------
l7 -> [l7 = 0]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r2 = l2]
l7 -> [l7 = l7 + 1]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
listener -> [listener = $r9]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
each -> [each = l9[l7]]
c -> [c = null]
failure -> [failure = $r8]
$r9 -> [$r9 = new org.junit.internal.TextListener]
result -> [result = $r0]
e -> [e = $r6]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
description -> [$r1 = new org.junit.runner.Description]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
l9 -> [l9 = args]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r6 -> [$r6 := @caughtexception]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
args -> [args := @parameter1: java.lang.String[]]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
classes -> [classes = $r4]
this -> [this := @this: org.junit.runner.JUnitCore]
l8 -> [l8 = lengthof args]
New result: c -> [c = null]
Time elapsed: 582.021589501
Transforming FuncTypeTest... 
Transforming ExitTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveNoLeakCall... 
Transforming TestRemoveLeak... 
Transforming SimpleTest... 
Transforming TestRemoveLeakingCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 03:32:22 CET 2013
Soot has run for 10 min. 41 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 03:32:22 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 62.5 seconds.
[Spark] Solution found in 62.5 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.181388407 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 459.101502932seconds.
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair $b0,[$b0 = 0]
Pair args,[args := @parameter1: java.lang.String[]]
Pair result,[result = $r0]
Pair $b0,[$b0 = 1]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
l6 -> [l6 = 0]
classes -> [classes = $r4]
result -> [result = $r0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
each -> [each = (org.junit.runner.notification.Failure) $r14]
listener -> [listener = $r10]
each -> [each = l8[l6]]
missingClasses -> [missingClasses = $r4]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r2 = l2]
$r4 -> [$r4 = new java.util.ArrayList]
description -> [$r1 = new org.junit.runner.Description]
$r3 -> [$r0 = new java.lang.String]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
l7 -> [l7 = lengthof args]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r2 = $r1[l1]]
this -> [this := @this: org.junit.runner.JUnitCore]
args -> [args := @parameter1: java.lang.String[]]
l6 -> [l6 = l6 + 1]
e -> [e = $r7]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
l8 -> [l8 = args]
$z0 -> [$z0 = 1]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
failure -> [failure = $r9]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
ORIGINAL size: 44
Original call graph has 93305 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 6.7112E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 18.7 seconds.
[Spark] Solution found in 18.7 seconds.
Updating callgraph took 20.763203226 seconds, callgraph now has 93308 edges.
Updating reachable methods took 6.918E-6 seconds
Graph patched in 20.985921882 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.164308616 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
CFG changeset computation took 2.445419366 seconds
Removing 31 expired nodes...
Expired nodes removed in 2.728836053 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.995388976 seconds
Actually processed 1 of 41 expired edges in 3.912437516 seconds
Processing worklist for values...
Worklist processing done, 5842 edges processed.
IDE results updated in 83.418649263 seconds.
--------------
NEW RESULTS
--------------
each -> [each = l9[l7]]
$r13 -> [$r1 = $r0[l1]]
classes -> [classes = $r4]
$r6 -> [$r6 := @caughtexception]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
result -> [result = $r0]
missingClasses -> [missingClasses = $r4]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
c -> [c = null]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r4 -> [$r4 = new java.util.ArrayList]
l7 -> [l7 = l7 + 1]
description -> [$r1 = new org.junit.runner.Description]
$r3 -> [$r0 = new java.lang.String]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r2 = l2]
l7 -> [l7 = 0]
$r9 -> [$r9 = new org.junit.internal.TextListener]
e -> [e = $r6]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r1 = $r0[l1]]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
failure -> [failure = $r8]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
args -> [args := @parameter1: java.lang.String[]]
listener -> [listener = $r9]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
l9 -> [l9 = args]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = $r1[l1]]
l8 -> [l8 = lengthof args]
$z0 -> [$z0 = 0]
New result: c -> [c = null]
Time elapsed: 567.929610375
Transforming TestRemoveLeak... 
Transforming SimpleTest... 
Transforming FuncTypeTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveNoLeakCall... 
Transforming ExitTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 03:42:57 CET 2013
Soot has run for 10 min. 34 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 03:42:57 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 55.3 seconds.
[Spark] Solution found in 55.3 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.15598154 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702481 edges propagated.
Solver done in 415.381130962seconds.
Pair $b0,[$b0 = 0]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $b0,[$b0 = 1]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
l8 -> [l8 = args]
classes -> [classes = $r4]
l7 -> [l7 = lengthof args]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r7 -> [$r7 := @caughtexception]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
args -> [args := @parameter1: java.lang.String[]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
failure -> [failure = $r9]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 0]
e -> [e = $r7]
description -> [$r1 = new org.junit.runner.Description]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r4 -> [$r4 = new java.util.ArrayList]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
missingClasses -> [missingClasses = $r4]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
result -> [result = $r0]
$r14 -> [$r1 = $r0[l1]]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r3 -> [$r0 = new java.lang.String]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
l6 -> [l6 = l6 + 1]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l2]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
listener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
l6 -> [l6 = 0]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r1 = $r0[l1]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
each -> [each = l8[l6]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
ORIGINAL size: 44
Original call graph has 93305 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.5628E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 21.1 seconds.
[Spark] Solution found in 21.1 seconds.
Updating callgraph took 21.989683586 seconds, callgraph now has 93308 edges.
Updating reachable methods took 7.813E-6 seconds
Graph patched in 22.212708726 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.147967163 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
CFG changeset computation took 2.37188112 seconds
Removing 31 expired nodes...
Expired nodes removed in 4.626161676 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.411675049 seconds
Actually processed 1 of 41 expired edges in 2.054304566 seconds
Processing worklist for values...
Worklist processing done, 5844 edges processed.
IDE results updated in 103.079239421 seconds.
--------------
NEW RESULTS
--------------
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
classes -> [classes = $r4]
l9 -> [l9 = args]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
args -> [args := @parameter1: java.lang.String[]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
c -> [c = null]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
l7 -> [l7 = l7 + 1]
$r13 -> [$r2 = l2]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 0]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
description -> [$r1 = new org.junit.runner.Description]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r4 -> [$r4 = new java.util.ArrayList]
l9 -> [$r0 = new java.util.AbstractList$Itr]
each -> [each = l9[l7]]
failure -> [failure = $r8]
missingClasses -> [missingClasses = $r4]
result -> [result = $r0]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r2 = $r1[l1]]
l7 -> [l7 = 0]
$r3 -> [$r0 = new java.lang.String]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0[l1]]
listener -> [listener = $r9]
e -> [e = $r6]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
l8 -> [l8 = lengthof args]
$r6 -> [$r6 := @caughtexception]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
each -> [each = (org.junit.runner.notification.Failure) $r13]
New result: c -> [c = null]
Time elapsed: 545.034060138
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming TestRemoveNoLeakCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 03:53:01 CET 2013
Soot has run for 10 min. 4 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 03:53:02 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 55.5 seconds.
[Spark] Solution found in 55.5 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.458533711 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 402.029364976seconds.
Pair result,[result = $r0]
Pair args,[args := @parameter1: java.lang.String[]]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
l8 -> [$r0 = new java.util.AbstractList$Itr]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r2 = l2]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
l7 -> [l7 = lengthof args]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
missingClasses -> [missingClasses = $r4]
description -> [$r1 = new org.junit.runner.Description]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r4 -> [$r4 = new java.util.ArrayList]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r1 = $r0[l1]]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
l6 -> [l6 = l6 + 1]
this -> [this := @this: org.junit.runner.JUnitCore]
classes -> [classes = $r4]
each -> [each = l8[l6]]
listener -> [listener = $r10]
e -> [e = $r7]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r7 -> [$r7 := @caughtexception]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
l6 -> [l6 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
l8 -> [l8 = args]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
failure -> [failure = $r9]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 0]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r1 = $r0[l1]]
result -> [result = $r0]
ORIGINAL size: 44
Original call graph has 93305 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.2357E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 19.4 seconds.
[Spark] Solution found in 19.4 seconds.
Updating callgraph took 20.267804134 seconds, callgraph now has 93308 edges.
Updating reachable methods took 7.79E-6 seconds
Graph patched in 20.5108736 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.19825716 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
CFG changeset computation took 2.474134906 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.43614415 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 4.442113952 seconds
Actually processed 1 of 41 expired edges in 5.833869424 seconds
Processing worklist for values...
Worklist processing done, 5833 edges processed.
IDE results updated in 87.886248718 seconds.
--------------
NEW RESULTS
--------------
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r1 = $r0[l1]]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r3 -> [$r0 = new java.lang.String]
l8 -> [l8 = lengthof args]
l7 -> [l7 = l7 + 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
c -> [c = null]
$r9 -> [$r9 = new org.junit.internal.TextListener]
description -> [$r1 = new org.junit.runner.Description]
missingClasses -> [missingClasses = $r4]
l7 -> [l7 = 0]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r6 -> [$r6 := @caughtexception]
e -> [e = $r6]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
l9 -> [l9 = args]
listener -> [listener = $r9]
$r13 -> [$r1 = $r0[l1]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
this -> [this := @this: org.junit.runner.JUnitCore]
classes -> [classes = $r4]
failure -> [failure = $r8]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 1]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
args -> [args := @parameter1: java.lang.String[]]
each -> [each = l9[l7]]
result -> [result = $r0]
New result: c -> [c = null]
Time elapsed: 515.137495603
Transforming TestRemoveNoLeakCall... 
Transforming TestRemoveLeak... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming TestRemoveLeakInFunction... 
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 04:02:36 CET 2013
Soot has run for 9 min. 34 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 04:02:36 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 57.0 seconds.
[Spark] Solution found in 57.0 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.413837807 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 382.593144085seconds.
Pair result,[result = $r0]
Pair $b0,[$b0 = 0]
Pair $b0,[$b0 = 1]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
this -> [this := @this: org.junit.runner.JUnitCore]
classes -> [classes = $r4]
$r7 -> [$r7 := @caughtexception]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
description -> [$r1 = new org.junit.runner.Description]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
l6 -> [l6 = 0]
$r4 -> [$r4 = new java.util.ArrayList]
failure -> [failure = $r9]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r2 = l2]
each -> [each = l8[l6]]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r3 -> [$r0 = new java.lang.String]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
listener -> [listener = $r10]
l6 -> [l6 = l6 + 1]
args -> [args := @parameter1: java.lang.String[]]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
l7 -> [l7 = lengthof args]
e -> [e = $r7]
l8 -> [l8 = args]
result -> [result = $r0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
ORIGINAL size: 44
Original call graph has 93305 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 6.8418E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 21.1 seconds.
[Spark] Solution found in 21.1 seconds.
Updating callgraph took 22.008597748 seconds, callgraph now has 93308 edges.
Updating reachable methods took 8.255E-6 seconds
Graph patched in 22.225304573 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.141896492 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
CFG changeset computation took 2.419594029 seconds
Removing 31 expired nodes...
Expired nodes removed in 2.608476642 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.647419609 seconds
Actually processed 1 of 41 expired edges in 29.70774047 seconds
Processing worklist for values...
Worklist processing done, 5865 edges processed.
IDE results updated in 145.248488559 seconds.
--------------
NEW RESULTS
--------------
c -> [c = null]
$r6 -> [$r6 := @caughtexception]
this -> [this := @this: org.junit.runner.JUnitCore]
l7 -> [l7 = 0]
classes -> [classes = $r4]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
description -> [$r1 = new org.junit.runner.Description]
failure -> [failure = $r8]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r4 -> [$r4 = new java.util.ArrayList]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
l7 -> [l7 = l7 + 1]
$r3 -> [$r0 = new java.lang.String]
listener -> [listener = $r9]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
e -> [e = $r6]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r1 = $r0[l1]]
l9 -> [$r0 = new java.util.AbstractList$Itr]
l8 -> [l8 = lengthof args]
args -> [args := @parameter1: java.lang.String[]]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$z0 -> [$z0 = 0]
l9 -> [l9 = args]
$r13 -> [$r1 = $r0[l1]]
result -> [result = $r0]
$r13 -> [$r2 = $r1[l1]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r2 = l2]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
each -> [each = l9[l7]]
New result: c -> [c = null]
Time elapsed: 554.658196826
Transforming DeleteInOutLoopTest... 
Transforming SimpleTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveNoLeakCall... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeak... 
Transforming TestRemoveLeakInFunction... 
Transforming ExitTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 04:12:52 CET 2013
Soot has run for 10 min. 15 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 04:12:52 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 51.8 seconds.
[Spark] Solution found in 51.8 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.190972399 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702480 edges propagated.
Solver done in 463.116728556seconds.
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $b0,[$b0 = 0]
Pair result,[result = $r0]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
e -> [e = $r7]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
failure -> [failure = $r9]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r2 = $r1[l1]]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
each -> [each = (org.junit.runner.notification.Failure) $r14]
this -> [this := @this: org.junit.runner.JUnitCore]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
l6 -> [l6 = l6 + 1]
$z0 -> [$z0 = 0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 1]
classes -> [classes = $r4]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
l8 -> [l8 = args]
listener -> [listener = $r10]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
l6 -> [l6 = 0]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r2 = l2]
$r3 -> [$r0 = new java.lang.String]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0[l1]]
each -> [each = l8[l6]]
$r14 -> [$r1 = $r0[l1]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
result -> [result = $r0]
l7 -> [l7 = lengthof args]
ORIGINAL size: 44
Original call graph has 93305 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.1035E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 18.4 seconds.
[Spark] Solution found in 18.4 seconds.
Updating callgraph took 19.24347946 seconds, callgraph now has 93308 edges.
Updating reachable methods took 7.743E-6 seconds
Graph patched in 19.469541865 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.663902424 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
CFG changeset computation took 2.337789899 seconds
Removing 31 expired nodes...
Expired nodes removed in 2.494339184 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 1.431576878 seconds
Actually processed 1 of 41 expired edges in 4.273975119 seconds
Processing worklist for values...
Worklist processing done, 5833 edges processed.
IDE results updated in 88.852494375 seconds.
--------------
NEW RESULTS
--------------
l9 -> [l9 = args]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r1 = $r0[l1]]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
listener -> [listener = $r9]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
args -> [args := @parameter1: java.lang.String[]]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
l7 -> [l7 = l7 + 1]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
this -> [this := @this: org.junit.runner.JUnitCore]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r6 -> [$r6 := @caughtexception]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
c -> [c = null]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 1]
failure -> [failure = $r8]
classes -> [classes = $r4]
l7 -> [l7 = 0]
e -> [e = $r6]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
each -> [each = l9[l7]]
l9 -> [$r0 = new java.util.AbstractList$Itr]
missingClasses -> [missingClasses = $r4]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r3 -> [$r0 = new java.lang.String]
$r4 -> [$r4 = new java.util.ArrayList]
l8 -> [l8 = lengthof args]
$r13 -> [$r2 = l2]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
description -> [$r1 = new org.junit.runner.Description]
result -> [result = $r0]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
New result: c -> [c = null]
Time elapsed: 576.342239424
Transforming TestRemoveNoLeakCall... 
Transforming SimpleTest... 
Transforming DeleteInOutLoopTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeak... 
Transforming FuncTypeTest... 
Transforming ExitTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 04:23:26 CET 2013
Soot has run for 10 min. 33 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 04:23:26 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 53.5 seconds.
[Spark] Solution found in 53.5 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.172555505 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702480 edges propagated.
Solver done in 515.073953566seconds.
Pair result,[result = $r0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
each -> [each = l8[l6]]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
classes -> [classes = $r4]
$r3 -> [$r0 = new java.lang.String]
l8 -> [l8 = args]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r7 -> [$r7 := @caughtexception]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
missingClasses -> [missingClasses = $r4]
l7 -> [l7 = lengthof args]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
listener -> [listener = $r10]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
result -> [result = $r0]
e -> [e = $r7]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
failure -> [failure = $r9]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 1]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r2 = l2]
each -> [each = (org.junit.runner.notification.Failure) $r14]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
l6 -> [l6 = 0]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
description -> [$r1 = new org.junit.runner.Description]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = $r1[l1]]
l6 -> [l6 = l6 + 1]
args -> [args := @parameter1: java.lang.String[]]
ORIGINAL size: 44
Original call graph has 93305 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.2256E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 52.3 seconds.
[Spark] Solution found in 52.3 seconds.
Updating callgraph took 53.112370916 seconds, callgraph now has 93308 edges.
Updating reachable methods took 7.872E-6 seconds
Graph patched in 53.329962789 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.163209543 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
CFG changeset computation took 2.373023253 seconds
Removing 31 expired nodes...
Expired nodes removed in 2.784002084 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.485720046 seconds
Actually processed 1 of 41 expired edges in 3.602984134 seconds
Processing worklist for values...
Worklist processing done, 5834 edges processed.
IDE results updated in 62.486621212 seconds.
--------------
NEW RESULTS
--------------
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r3 -> [$r0 = new java.lang.String]
classes -> [classes = $r4]
$r13 -> [$r1 = $r0[l1]]
$r6 -> [$r6 := @caughtexception]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
c -> [c = null]
listener -> [listener = $r9]
e -> [e = $r6]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
missingClasses -> [missingClasses = $r4]
l7 -> [l7 = 0]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
each -> [each = l9[l7]]
l9 -> [$r0 = new java.util.AbstractList$Itr]
each -> [each = (org.junit.runner.notification.Failure) $r13]
result -> [result = $r0]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 0]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r1 = $r0[l1]]
l7 -> [l7 = l7 + 1]
l8 -> [l8 = lengthof args]
$r4 -> [$r4 = new java.util.ArrayList]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
this -> [this := @this: org.junit.runner.JUnitCore]
failure -> [failure = $r8]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
l9 -> [l9 = args]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
description -> [$r1 = new org.junit.runner.Description]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r2 = l2]
args -> [args := @parameter1: java.lang.String[]]
New result: c -> [c = null]
Time elapsed: 635.275099052
Transforming TestRemoveLeakingCall... 
Transforming DeleteAssignmentInLoopTest... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeakInFunction... 
Transforming SimpleTest... 
Transforming TestRemoveNoLeakCall... 
Transforming DeleteInOutLoopTest... 
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 04:34:59 CET 2013
Soot has run for 11 min. 32 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 04:34:59 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 54.4 seconds.
[Spark] Solution found in 54.4 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.406837104 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 356.08171731seconds.
Pair $b0,[$b0 = 1]
Pair $b0,[$b0 = 0]
Pair result,[result = $r0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
l7 -> [l7 = lengthof args]
result -> [result = $r0]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
l8 -> [l8 = args]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
failure -> [failure = $r9]
$r14 -> [$r1 = $r0[l1]]
l6 -> [l6 = l6 + 1]
listener -> [listener = $r10]
$r14 -> [$r2 = l2]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r4 -> [$r4 = new java.util.ArrayList]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r7 -> [$r7 := @caughtexception]
classes -> [classes = $r4]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
description -> [$r1 = new org.junit.runner.Description]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
each -> [each = l8[l6]]
missingClasses -> [missingClasses = $r4]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r10 -> [$r10 = new org.junit.internal.TextListener]
l6 -> [l6 = 0]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
e -> [e = $r7]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r1 = $r0[l1]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
args -> [args := @parameter1: java.lang.String[]]
ORIGINAL size: 44
Original call graph has 93305 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.1315E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 19.2 seconds.
[Spark] Solution found in 19.2 seconds.
Updating callgraph took 20.084098754 seconds, callgraph now has 93308 edges.
Updating reachable methods took 7.774E-6 seconds
Graph patched in 20.302288093 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.158006146 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
CFG changeset computation took 2.442922854 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.796827275 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 3.066643651 seconds
Actually processed 1 of 41 expired edges in 4.338511154 seconds
Processing worklist for values...
Worklist processing done, 5865 edges processed.
IDE results updated in 68.056263311 seconds.
--------------
NEW RESULTS
--------------
result -> [result = $r0]
$r6 -> [$r6 := @caughtexception]
l7 -> [l7 = l7 + 1]
$r13 -> [$r1 = $r0[l1]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r3 -> [$r0 = new java.lang.String]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
c -> [c = null]
$r13 -> [$r2 = l2]
listener -> [listener = $r9]
l7 -> [l7 = 0]
failure -> [failure = $r8]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
classes -> [classes = $r4]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 0]
l9 -> [l9 = args]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r2 = $r1[l1]]
each -> [each = l9[l7]]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
e -> [e = $r6]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
this -> [this := @this: org.junit.runner.JUnitCore]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r1 = $r0[l1]]
l8 -> [l8 = lengthof args]
New result: c -> [c = null]
Time elapsed: 449.041386473
Transforming TestRemoveLeakingCall... 
Transforming SimpleTest... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeak... 
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveNoLeakCall... 
Transforming DeleteInOutLoopTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 04:43:26 CET 2013
Soot has run for 8 min. 27 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 04:43:26 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 59.1 seconds.
[Spark] Solution found in 59.1 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.245538408 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 331.253613152seconds.
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r2 = l2]
l6 -> [l6 = l6 + 1]
description -> [$r1 = new org.junit.runner.Description]
$r7 -> [$r7 := @caughtexception]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r1 = $r0[l1]]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
l8 -> [l8 = args]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r10 -> [$r10 = new org.junit.internal.TextListener]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
failure -> [failure = $r9]
l8 -> [$r0 = new java.util.AbstractList$Itr]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r4 -> [$r4 = new java.util.ArrayList]
classes -> [classes = $r4]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
e -> [e = $r7]
l7 -> [l7 = lengthof args]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
$r3 -> [$r0 = new java.lang.String]
each -> [each = l8[l6]]
l6 -> [l6 = 0]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
listener -> [listener = $r10]
$r14 -> [$r2 = $r1[l1]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
result -> [result = $r0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
ORIGINAL size: 44
Original call graph has 93305 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.2012E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 20.5 seconds.
[Spark] Solution found in 20.5 seconds.
Updating callgraph took 21.3265521 seconds, callgraph now has 93308 edges.
Updating reachable methods took 7.817E-6 seconds
Graph patched in 21.550760283 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.155992499 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
CFG changeset computation took 2.408412687 seconds
Removing 31 expired nodes...
Expired nodes removed in 2.646381471 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.764363781 seconds
Actually processed 1 of 41 expired edges in 3.244803601 seconds
Processing worklist for values...
Worklist processing done, 5833 edges processed.
IDE results updated in 97.122894384 seconds.
--------------
NEW RESULTS
--------------
l7 -> [l7 = l7 + 1]
l7 -> [l7 = 0]
description -> [$r1 = new org.junit.runner.Description]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
failure -> [failure = $r8]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r1 = $r0[l1]]
e -> [e = $r6]
each -> [each = l9[l7]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
l9 -> [$r0 = new java.util.AbstractList$Itr]
l9 -> [l9 = args]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
classes -> [classes = $r4]
$r4 -> [$r4 = new java.util.ArrayList]
$r6 -> [$r6 := @caughtexception]
c -> [c = null]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
listener -> [listener = $r9]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
args -> [args := @parameter1: java.lang.String[]]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 1]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0[l1]]
l8 -> [l8 = lengthof args]
$r13 -> [$r2 = l2]
result -> [result = $r0]
New result: c -> [c = null]
Time elapsed: 454.361542021
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming ExitTest... 
Transforming TestRemoveNoLeakCall... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeak... 
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 04:52:04 CET 2013
Soot has run for 8 min. 37 sec.
removeStmtFromLoopJU_Propagate finished.
Test run was successful
