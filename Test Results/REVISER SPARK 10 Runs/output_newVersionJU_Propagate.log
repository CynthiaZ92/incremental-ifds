Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 06:34:06 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 4.5 seconds.
[Spark] Type masks in 0.1 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 67.8 seconds.
[Spark] Solution found in 67.8 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 6.199022914 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702480 edges propagated.
Solver done in 466.968095134seconds.
Pair result,[result = $r0]
Pair $b0,[$b0 = 0]
Pair args,[args := @parameter1: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (79987367)
RESULTS:
-------------------
result -> [result = $r0]
$b0 -> [$b0 = 0]
args -> [args := @parameter1: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (3a820f86)
RESULTS:
-------------------
listener -> [listener = $r10]
each -> [each = (org.junit.runner.notification.Failure) $r14]
failure -> [failure = $r9]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
classes -> [classes = $r4]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
missingClasses -> [missingClasses = $r4]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
l6 -> [l6 = l6 + 1]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r3 -> [$r0 = new java.lang.String]
l6 -> [l6 = 0]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r1 = $r0[l1]]
l7 -> [l7 = lengthof args]
this -> [this := @this: org.junit.runner.JUnitCore]
l8 -> [$r0 = new java.util.AbstractList$Itr]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r2 = l2]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r7 -> [$r7 := @caughtexception]
each -> [each = l8[l6]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
e -> [e = $r7]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r2 = $r1[l1]]
result -> [result = $r0]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
l8 -> [l8 = args]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$r4 -> [$r4 = new java.util.ArrayList]
args -> [args := @parameter1: java.lang.String[]]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (3209fb4d)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (1ea69464)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (314c567b)
RESULTS:
-------------------
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT return (586404df)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 93305 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.90795E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 54.3 seconds.
[Spark] Solution found in 54.3 seconds.
Updating callgraph took 55.331277597 seconds, callgraph now has 93305 edges.
Updating reachable methods took 4.363E-5 seconds
Graph patched in 55.86414733 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.317165634 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
CFG changeset computation took 2.710830839 seconds
Removing 37 expired nodes...
Expired nodes removed in 3.360841303 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.502744864 seconds
Phase 2 took 0.078412304 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.034396509 seconds
Actually processed 3 of 62 expired edges in 3.271306513 seconds
Processing worklist for values...
Worklist processing done, 5928 edges processed.
IDE results updated in 83.094629265 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (7ff61db5)
NEW RESULTS:
-------------------
result -> [result = $r0]
$b0 -> [$b0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
$b0 -> [$b0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (236f6d05)
NEW RESULTS:
-------------------
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
e -> [e = $r6]
classes -> [classes = $r4]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
missingClasses -> [missingClasses = $r4]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r2 = l2]
this -> [this := @this: org.junit.runner.JUnitCore]
listener -> [listener = $r9]
each -> [each = arr$[i$]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r1 = $r0[l1]]
result -> [result = $r0]
$z0 -> [$z0 = 0]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
i$ -> [i$ = 0]
i$ -> [i$ = i$ + 1]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
len$ -> [len$ = lengthof arr$]
$r6 -> [$r6 := @caughtexception]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
failure -> [failure = $r8]
$r4 -> [$r4 = new java.util.ArrayList]
$r9 -> [$r9 = new org.junit.internal.TextListener]
arr$ -> [arr$ = args]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
args -> [args := @parameter1: java.lang.String[]]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (3209fb4d)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (1ea69464)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (314c567b)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT return (586404df)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 614.800376825
Transforming TestRemoveNoLeakCall... 
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming ExitTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeak... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 06:45:43 CET 2013
Soot has run for 11 min. 37 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 06:45:43 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.8 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 55.8 seconds.
[Spark] Solution found in 55.8 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.27142166 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702480 edges propagated.
Solver done in 384.116342153seconds.
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (3fcf415b)
RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
result -> [result = $r0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$b0 -> [$b0 = 1]
$b0 -> [$b0 = 0]
args -> [args := @parameter1: java.lang.String[]]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (2d8c9946)
RESULTS:
-------------------
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
l8 -> [l8 = args]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r2 = l2]
e -> [e = $r7]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
l6 -> [l6 = l6 + 1]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
classes -> [classes = $r4]
$r14 -> [$r1 = $r0[l1]]
description -> [$r1 = new org.junit.runner.Description]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
missingClasses -> [missingClasses = $r4]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0[l1]]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
result -> [result = $r0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r3 -> [$r0 = new java.lang.String]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
listener -> [listener = $r10]
l7 -> [l7 = lengthof args]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
l8 -> [$r0 = new java.util.AbstractList$Itr]
args -> [args := @parameter1: java.lang.String[]]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
failure -> [failure = $r9]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r2 = $r1[l1]]
l6 -> [l6 = 0]
$r4 -> [$r4 = new java.util.ArrayList]
each -> [each = l8[l6]]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (757d756a)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (6c2a3e4e)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (176c86be)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
GET RESULTS AT return (55f6d288)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 93305 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 9.2932E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 20.4 seconds.
[Spark] Solution found in 20.4 seconds.
Updating callgraph took 21.244523167 seconds, callgraph now has 93305 edges.
Updating reachable methods took 8.311E-6 seconds
Graph patched in 21.573115756 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.237981359 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
CFG changeset computation took 2.44181949 seconds
Removing 37 expired nodes...
Expired nodes removed in 3.167259199 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.035432757 seconds
Phase 2 took 0.032262382 seconds
Phase 2 took 0.417204529 seconds
Actually processed 3 of 62 expired edges in 3.46270785 seconds
Processing worklist for values...
Worklist processing done, 5398 edges processed.
IDE results updated in 84.083699615 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (3abe64ce)
NEW RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
result -> [result = $r0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
$b0 -> [$b0 = 0]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (6b709951)
NEW RESULTS:
-------------------
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
failure -> [failure = $r8]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r0 -> [l0 := @this: java.lang.StringBuilder]
classes -> [classes = $r4]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r1 = $r0[l1]]
i$ -> [$r0 = new java.util.AbstractList$Itr]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
e -> [e = $r6]
i$ -> [i$ = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
listener -> [listener = $r9]
len$ -> [len$ = lengthof arr$]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
result -> [result = $r0]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r1 = $r0[l1]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
i$ -> [i$ = i$ + 1]
args -> [args := @parameter1: java.lang.String[]]
arr$ -> [arr$ = args]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
each -> [each = arr$[i$]]
$r13 -> [$r2 = l2]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r6 -> [$r6 := @caughtexception]
$r4 -> [$r4 = new java.util.ArrayList]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (757d756a)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (6c2a3e4e)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (176c86be)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
GET RESULTS AT return (55f6d288)
NEW RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Time elapsed: 494.389841571
Transforming TestRemoveLeak... 
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming ExitTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveNoLeakCall... 
Transforming TestRemoveLeakingCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 06:54:57 CET 2013
Soot has run for 9 min. 14 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 06:54:57 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 63.3 seconds.
[Spark] Solution found in 63.3 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.187164141 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 429.427069213seconds.
Pair $b0,[$b0 = 0]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (7f8bdcb7)
RESULTS:
-------------------
$b0 -> [$b0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
result -> [result = $r0]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (3ed3f11d)
RESULTS:
-------------------
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
failure -> [failure = $r9]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r2 = $r1[l1]]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
l7 -> [l7 = lengthof args]
$r14 -> [$r1 = $r0[l1]]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
e -> [e = $r7]
$r0 -> [l0 := @this: java.lang.StringBuilder]
listener -> [listener = $r10]
$r7 -> [$r7 := @caughtexception]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
l6 -> [l6 = l6 + 1]
$r3 -> [$r0 = new java.lang.String]
result -> [result = $r0]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$r10 -> [$r10 = new org.junit.internal.TextListener]
l6 -> [l6 = 0]
$r14 -> [$r2 = l2]
args -> [args := @parameter1: java.lang.String[]]
each -> [each = l8[l6]]
classes -> [classes = $r4]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
missingClasses -> [missingClasses = $r4]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
description -> [$r1 = new org.junit.runner.Description]
l8 -> [l8 = args]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (56604000)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (7d6b5392)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (172a5c4f)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (1c3fbe34)
RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Original call graph has 93305 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 6.7026E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 20.4 seconds.
[Spark] Solution found in 20.4 seconds.
Updating callgraph took 21.192121492 seconds, callgraph now has 93305 edges.
Updating reachable methods took 8.364E-6 seconds
Graph patched in 21.419895414 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.193603456 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
CFG changeset computation took 2.466455268 seconds
Removing 37 expired nodes...
Expired nodes removed in 4.784280831 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 1.194674797 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.034661669 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.062909511 seconds
Actually processed 3 of 62 expired edges in 5.726172692 seconds
Processing worklist for values...
Worklist processing done, 6017 edges processed.
IDE results updated in 103.509853515 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (7aa290fb)
NEW RESULTS:
-------------------
$b0 -> [$b0 = 0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
result -> [result = $r0]
args -> [args := @parameter1: java.lang.String[]]
$b0 -> [$b0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (18b4a917)
NEW RESULTS:
-------------------
e -> [e = $r6]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r2 = l2]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
arr$ -> [arr$ = args]
i$ -> [i$ = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r1 = $r0[l1]]
$r6 -> [$r6 := @caughtexception]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
i$ -> [i$ = i$ + 1]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r2 = $r1[l1]]
$r3 -> [$r0 = new java.lang.String]
listener -> [listener = $r9]
result -> [result = $r0]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 1]
failure -> [failure = $r8]
$r13 -> [$r1 = $r0[l1]]
args -> [args := @parameter1: java.lang.String[]]
classes -> [classes = $r4]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
len$ -> [len$ = lengthof arr$]
each -> [each = arr$[i$]]
missingClasses -> [missingClasses = $r4]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
description -> [$r1 = new org.junit.runner.Description]
this -> [this := @this: org.junit.runner.JUnitCore]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 0]
i$ -> [$r0 = new java.util.AbstractList$Itr]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (56604000)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (7d6b5392)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (172a5c4f)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT return (1c3fbe34)
NEW RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Time elapsed: 558.83590968
Transforming TestRemoveLeakInFunction... 
Transforming SimpleTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveNoLeakCall... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeakingCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 07:05:24 CET 2013
Soot has run for 10 min. 26 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 07:05:24 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 56.2 seconds.
[Spark] Solution found in 56.2 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.381013598 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702480 edges propagated.
Solver done in 484.796444369seconds.
Pair result,[result = $r0]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair args,[args := @parameter1: java.lang.String[]]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (2c36f1e8)
RESULTS:
-------------------
result -> [result = $r0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter1: java.lang.String[]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
$b0 -> [$b0 = 1]
$b0 -> [$b0 = 0]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (2c164cc8)
RESULTS:
-------------------
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
failure -> [failure = $r9]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r4 -> [$r4 = new java.util.ArrayList]
this -> [this := @this: org.junit.runner.JUnitCore]
l7 -> [l7 = lengthof args]
e -> [e = $r7]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
description -> [$r1 = new org.junit.runner.Description]
l8 -> [$r0 = new java.util.AbstractList$Itr]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
classes -> [classes = $r4]
$r7 -> [$r7 := @caughtexception]
$r10 -> [$r10 = new org.junit.internal.TextListener]
listener -> [listener = $r10]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r1 = $r0[l1]]
l6 -> [l6 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
l6 -> [l6 = l6 + 1]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 1]
each -> [each = l8[l6]]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
l8 -> [l8 = args]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
missingClasses -> [missingClasses = $r4]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r2 = $r1[l1]]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
result -> [result = $r0]
$r14 -> [$r2 = l2]
$r14 -> [$r1 = $r0[l1]]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (205cb82)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (7ce1b442)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (14aff8fd)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (2bce744b)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 93305 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 6.7448E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 19.2 seconds.
[Spark] Solution found in 19.2 seconds.
Updating callgraph took 19.999171615 seconds, callgraph now has 93305 edges.
Updating reachable methods took 7.893E-6 seconds
Graph patched in 20.221513604 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.133603287 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
CFG changeset computation took 2.347104088 seconds
Removing 37 expired nodes...
Expired nodes removed in 3.007830105 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 3.915080477 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.033404089 seconds
Phase 2 took 0.034219339 seconds
Actually processed 3 of 62 expired edges in 6.693310115 seconds
Processing worklist for values...
Worklist processing done, 5398 edges processed.
IDE results updated in 98.028135015 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (17deb64)
NEW RESULTS:
-------------------
result -> [result = $r0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
args -> [args := @parameter1: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
$b0 -> [$b0 = 1]
$b0 -> [$b0 = 0]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (57bcbccf)
NEW RESULTS:
-------------------
args -> [args := @parameter1: java.lang.String[]]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r2 = l2]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
e -> [e = $r6]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r4 -> [$r4 = new java.util.ArrayList]
this -> [this := @this: org.junit.runner.JUnitCore]
failure -> [failure = $r8]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 0]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r2 = $r1[l1]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
listener -> [listener = $r9]
classes -> [classes = $r4]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r6 -> [$r6 := @caughtexception]
$r3 -> [$r0 = new java.lang.String]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[l1]]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r1 = $r0[l1]]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
len$ -> [len$ = lengthof arr$]
i$ -> [i$ = 0]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
missingClasses -> [missingClasses = $r4]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
each -> [each = arr$[i$]]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
result -> [result = $r0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
i$ -> [i$ = i$ + 1]
arr$ -> [arr$ = args]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (205cb82)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (7ce1b442)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (14aff8fd)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (2bce744b)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 608.629909462
Transforming TestRemoveLeakInFunction... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeak... 
Transforming TestRemoveNoLeakCall... 
Transforming DeleteInOutLoopTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming SimpleTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 07:16:34 CET 2013
Soot has run for 11 min. 9 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 07:16:34 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 55.2 seconds.
[Spark] Solution found in 55.2 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.177297606 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702480 edges propagated.
Solver done in 399.277844573seconds.
Pair $b0,[$b0 = 0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (78fc13cc)
RESULTS:
-------------------
$b0 -> [$b0 = 0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
$b0 -> [$b0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
result -> [result = $r0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (61137d2e)
RESULTS:
-------------------
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r1 = $r0[l1]]
classes -> [classes = $r4]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
e -> [e = $r7]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r1 = $r0[l1]]
result -> [result = $r0]
l8 -> [l8 = args]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r10 -> [$r10 = new org.junit.internal.TextListener]
each -> [each = l8[l6]]
l6 -> [l6 = l6 + 1]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 1]
l7 -> [l7 = lengthof args]
$r4 -> [$r4 = new java.util.ArrayList]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r2 = $r1[l1]]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
each -> [each = (org.junit.runner.notification.Failure) $r14]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
listener -> [listener = $r10]
missingClasses -> [missingClasses = $r4]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
failure -> [failure = $r9]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r2 = l2]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
l6 -> [l6 = 0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (438b9bb2)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (6f275b1)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (2900645a)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (6df4bba9)
RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Original call graph has 93305 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.2801E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 21.0 seconds.
[Spark] Solution found in 21.0 seconds.
Updating callgraph took 21.815097155 seconds, callgraph now has 93305 edges.
Updating reachable methods took 8.744E-6 seconds
Graph patched in 22.039263668 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.20884788 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
CFG changeset computation took 2.451103984 seconds
Removing 37 expired nodes...
Expired nodes removed in 3.204475834 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 2.835459916 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.036412512 seconds
Phase 2 took 0.033873881 seconds
Actually processed 3 of 62 expired edges in 6.825626088 seconds
Processing worklist for values...
Worklist processing done, 5400 edges processed.
IDE results updated in 78.187021557 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (1312549d)
NEW RESULTS:
-------------------
$b0 -> [$b0 = 0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
$b0 -> [$b0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
result -> [result = $r0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (7a09e73f)
NEW RESULTS:
-------------------
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
args -> [args := @parameter1: java.lang.String[]]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
classes -> [classes = $r4]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
result -> [result = $r0]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r2 = $r1[l1]]
$r6 -> [$r6 := @caughtexception]
$r13 -> [$r1 = $r0[l1]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
each -> [each = arr$[i$]]
len$ -> [len$ = lengthof arr$]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
failure -> [failure = $r8]
$z0 -> [$z0 = 1]
this -> [this := @this: org.junit.runner.JUnitCore]
$r4 -> [$r4 = new java.util.ArrayList]
e -> [e = $r6]
listener -> [listener = $r9]
description -> [$r1 = new org.junit.runner.Description]
i$ -> [i$ = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
arr$ -> [arr$ = args]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r1 = $r0[l1]]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r2 = l2]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
i$ -> [i$ = i$ + 1]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (438b9bb2)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (6f275b1)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (2900645a)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (6df4bba9)
NEW RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Time elapsed: 503.955546071
Transforming SimpleTest... 
Transforming DeleteInOutLoopTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveNoLeakCall... 
Transforming FuncTypeTest... 
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeakingCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 07:25:58 CET 2013
Soot has run for 9 min. 24 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 07:25:58 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 2.2 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 53.4 seconds.
[Spark] Solution found in 53.4 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.181669722 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 525.152997118seconds.
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair args,[args := @parameter1: java.lang.String[]]
Pair result,[result = $r0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (235bdfc9)
RESULTS:
-------------------
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
result -> [result = $r0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$b0 -> [$b0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
$b0 -> [$b0 = 0]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (2b31d6dc)
RESULTS:
-------------------
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r2 = $r1[l1]]
args -> [args := @parameter1: java.lang.String[]]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
missingClasses -> [missingClasses = $r4]
failure -> [failure = $r9]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
l6 -> [l6 = l6 + 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
classes -> [classes = $r4]
$r7 -> [$r7 := @caughtexception]
result -> [result = $r0]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r4 -> [$r4 = new java.util.ArrayList]
description -> [$r1 = new org.junit.runner.Description]
l8 -> [l8 = args]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r1 = $r0[l1]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
this -> [this := @this: org.junit.runner.JUnitCore]
e -> [e = $r7]
$r3 -> [$r0 = new java.lang.String]
l6 -> [l6 = 0]
listener -> [listener = $r10]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r2 = l2]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
l7 -> [l7 = lengthof args]
$z0 -> [$z0 = 1]
each -> [each = l8[l6]]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (739efd90)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (1b4b757)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (18e13854)
RESULTS:
-------------------
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT return (5da2ec48)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 93305 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.3956E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 19.1 seconds.
[Spark] Solution found in 19.1 seconds.
Updating callgraph took 19.972020852 seconds, callgraph now has 93305 edges.
Updating reachable methods took 7.989E-6 seconds
Graph patched in 20.193938895 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 3.025225209 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
CFG changeset computation took 2.395848612 seconds
Removing 37 expired nodes...
Expired nodes removed in 3.131997149 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.032694906 seconds
Phase 2 took 2.736074063 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.036313257 seconds
Actually processed 3 of 62 expired edges in 10.807164115 seconds
Processing worklist for values...
Worklist processing done, 5399 edges processed.
IDE results updated in 89.000943026 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (724e5db4)
NEW RESULTS:
-------------------
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
result -> [result = $r0]
args -> [args := @parameter1: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$b0 -> [$b0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
$b0 -> [$b0 = 0]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (29a08a3)
NEW RESULTS:
-------------------
i$ -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
each -> [each = arr$[i$]]
args -> [args := @parameter1: java.lang.String[]]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r1 = $r0[l1]]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
classes -> [classes = $r4]
$r9 -> [$r9 = new org.junit.internal.TextListener]
listener -> [listener = $r9]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
e -> [e = $r6]
len$ -> [len$ = lengthof arr$]
result -> [result = $r0]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r2 = $r1[l1]]
i$ -> [i$ = i$ + 1]
$r13 -> [$r2 = l2]
$r4 -> [$r4 = new java.util.ArrayList]
description -> [$r1 = new org.junit.runner.Description]
i$ -> [i$ = 0]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r1 = $r0[l1]]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
failure -> [failure = $r8]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
this -> [this := @this: org.junit.runner.JUnitCore]
$r6 -> [$r6 := @caughtexception]
$r3 -> [$r0 = new java.lang.String]
arr$ -> [arr$ = args]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 1]
each -> [each = (org.junit.runner.notification.Failure) $r13]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (739efd90)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (1b4b757)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (18e13854)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT return (5da2ec48)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 639.621644355
Transforming TestRemoveNoLeakCall... 
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming SimpleTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming FuncTypeTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 07:37:37 CET 2013
Soot has run for 11 min. 38 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 07:37:37 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 54.0 seconds.
[Spark] Solution found in 54.0 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.172145423 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 445.805457557seconds.
Pair $b0,[$b0 = 0]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair result,[result = $r0]
Pair $b0,[$b0 = 1]
Pair args,[args := @parameter1: java.lang.String[]]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (57fc3cf6)
RESULTS:
-------------------
$b0 -> [$b0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
result -> [result = $r0]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (1946e9a9)
RESULTS:
-------------------
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
listener -> [listener = $r10]
$r3 -> [$r0 = new java.lang.String]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r1 = $r0[l1]]
l8 -> [l8 = args]
$r14 -> [$r2 = $r1[l1]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
l6 -> [l6 = 0]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
this -> [this := @this: org.junit.runner.JUnitCore]
failure -> [failure = $r9]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
result -> [result = $r0]
description -> [$r1 = new org.junit.runner.Description]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
each -> [each = l8[l6]]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
e -> [e = $r7]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
l6 -> [l6 = l6 + 1]
l7 -> [l7 = lengthof args]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l2]
classes -> [classes = $r4]
$r7 -> [$r7 := @caughtexception]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (333c0f96)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (1b9c126b)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (3f955ec3)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (a1a0989)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 93305 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.2617E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 22.1 seconds.
[Spark] Solution found in 22.1 seconds.
Updating callgraph took 22.970882845 seconds, callgraph now has 93305 edges.
Updating reachable methods took 7.512E-6 seconds
Graph patched in 23.193169885 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.148060727 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
CFG changeset computation took 2.397872601 seconds
Removing 37 expired nodes...
Expired nodes removed in 3.083595793 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.40143946 seconds
Phase 2 took 0.060934773 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.034518813 seconds
Actually processed 3 of 62 expired edges in 30.883511296 seconds
Processing worklist for values...
Worklist processing done, 5918 edges processed.
IDE results updated in 115.722773238 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (2cb6d174)
NEW RESULTS:
-------------------
$b0 -> [$b0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
result -> [result = $r0]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (186c0415)
NEW RESULTS:
-------------------
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r1 = $r0[l1]]
$r3 -> [$r0 = new java.lang.String]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
i$ -> [i$ = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
len$ -> [len$ = lengthof arr$]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
this -> [this := @this: org.junit.runner.JUnitCore]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r2 = $r1[l1]]
e -> [e = $r6]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r6 -> [$r6 := @caughtexception]
$z0 -> [$z0 = 0]
result -> [result = $r0]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
arr$ -> [arr$ = args]
$r13 -> [$r2 = l2]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
missingClasses -> [missingClasses = $r4]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 1]
listener -> [listener = $r9]
classes -> [classes = $r4]
failure -> [failure = $r8]
each -> [each = arr$[i$]]
$r13 -> [$r1 = $r0[l1]]
args -> [args := @parameter1: java.lang.String[]]
i$ -> [i$ = i$ + 1]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (333c0f96)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (1b9c126b)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (3f955ec3)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (a1a0989)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 589.100296629
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveNoLeakCall... 
Transforming SimpleTest... 
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 07:48:25 CET 2013
Soot has run for 10 min. 47 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 07:48:25 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 53.8 seconds.
[Spark] Solution found in 53.8 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.404005673 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702481 edges propagated.
Solver done in 416.395359843seconds.
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair result,[result = $r0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (1f916a1b)
RESULTS:
-------------------
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
result -> [result = $r0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
$b0 -> [$b0 = 1]
$b0 -> [$b0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (4a025d7a)
RESULTS:
-------------------
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r2 = $r1[l1]]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
each -> [each = (org.junit.runner.notification.Failure) $r14]
l6 -> [l6 = 0]
args -> [args := @parameter1: java.lang.String[]]
each -> [each = l8[l6]]
classes -> [classes = $r4]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
result -> [result = $r0]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
l7 -> [l7 = lengthof args]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
e -> [e = $r7]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
l8 -> [l8 = args]
$z0 -> [$z0 = 1]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r3 -> [$r0 = new java.lang.String]
failure -> [failure = $r9]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = l2]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
l6 -> [l6 = l6 + 1]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
listener -> [listener = $r10]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0[l1]]
description -> [$r1 = new org.junit.runner.Description]
l8 -> [$r0 = new java.util.AbstractList$Itr]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (49a95c83)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (398e399b)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (17ca24b8)
RESULTS:
-------------------
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (1e1d08b4)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 93305 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.7921E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 20.6 seconds.
[Spark] Solution found in 20.6 seconds.
Updating callgraph took 21.433390208 seconds, callgraph now has 93305 edges.
Updating reachable methods took 7.744E-6 seconds
Graph patched in 21.655776621 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.163646492 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
CFG changeset computation took 2.497989868 seconds
Removing 37 expired nodes...
Expired nodes removed in 3.246260326 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.034295914 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.036597275 seconds
Phase 2 took 0.466933189 seconds
Actually processed 3 of 62 expired edges in 4.039484378 seconds
Processing worklist for values...
Worklist processing done, 5398 edges processed.
IDE results updated in 98.952540105 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (d8759ae)
NEW RESULTS:
-------------------
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
result -> [result = $r0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
$b0 -> [$b0 = 1]
$b0 -> [$b0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (a6f7237)
NEW RESULTS:
-------------------
$r12 -> [$r12 = (java.lang.Class[]) $r11]
failure -> [failure = $r8]
i$ -> [i$ = i$ + 1]
listener -> [listener = $r9]
args -> [args := @parameter1: java.lang.String[]]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r1 = $r0[l1]]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
classes -> [classes = $r4]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
result -> [result = $r0]
$r13 -> [$r2 = $r1[l1]]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r2 = l2]
i$ -> [i$ = 0]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
missingClasses -> [missingClasses = $r4]
e -> [e = $r6]
$z0 -> [$z0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
arr$ -> [arr$ = args]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[l1]]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r6 -> [$r6 := @caughtexception]
$r3 -> [$r0 = new java.lang.String]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r4 -> [$r4 = new java.util.ArrayList]
$r0 -> [l0 := @this: java.lang.StringBuilder]
len$ -> [len$ = lengthof arr$]
each -> [each = arr$[i$]]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
description -> [$r1 = new org.junit.runner.Description]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (49a95c83)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (398e399b)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (17ca24b8)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (1e1d08b4)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 541.634595248
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeak... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveNoLeakCall... 
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming ExitTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 07:58:24 CET 2013
Soot has run for 9 min. 59 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 07:58:24 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 60.6 seconds.
[Spark] Solution found in 60.6 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.453076844 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 484.708387669seconds.
Pair result,[result = $r0]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $b0,[$b0 = 0]
Pair $b0,[$b0 = 1]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair args,[args := @parameter1: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (29be60a6)
RESULTS:
-------------------
result -> [result = $r0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$b0 -> [$b0 = 0]
$b0 -> [$b0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (3d1488bd)
RESULTS:
-------------------
$z0 -> [$z0 = 1]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r2 = $r1[l1]]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
each -> [each = (org.junit.runner.notification.Failure) $r14]
description -> [$r1 = new org.junit.runner.Description]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r2 = l2]
e -> [e = $r7]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r4 -> [$r4 = new java.util.ArrayList]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
l8 -> [$r0 = new java.util.AbstractList$Itr]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r1 = $r0[l1]]
each -> [each = l8[l6]]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
l7 -> [l7 = lengthof args]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
classes -> [classes = $r4]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
failure -> [failure = $r9]
result -> [result = $r0]
missingClasses -> [missingClasses = $r4]
l8 -> [l8 = args]
$r7 -> [$r7 := @caughtexception]
l6 -> [l6 = l6 + 1]
listener -> [listener = $r10]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
args -> [args := @parameter1: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
l6 -> [l6 = 0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (4458f495)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (97576a8)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (5f051ef6)
RESULTS:
-------------------
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT return (4b8cb334)
RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Original call graph has 93305 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.00252E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 21.2 seconds.
[Spark] Solution found in 21.2 seconds.
Updating callgraph took 22.00300143 seconds, callgraph now has 93305 edges.
Updating reachable methods took 8.081E-6 seconds
Graph patched in 22.215623822 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.136541455 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
CFG changeset computation took 2.430150144 seconds
Removing 37 expired nodes...
Expired nodes removed in 3.182334654 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 1.547455048 seconds
Phase 2 took 0.066615602 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.030442331 seconds
Actually processed 3 of 62 expired edges in 30.243167889 seconds
Processing worklist for values...
Worklist processing done, 5918 edges processed.
IDE results updated in 101.986009509 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (5300f7d9)
NEW RESULTS:
-------------------
result -> [result = $r0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$b0 -> [$b0 = 0]
$b0 -> [$b0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (64703c80)
NEW RESULTS:
-------------------
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r1 = $r0[l1]]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r3 -> [$r0 = new java.lang.String]
failure -> [failure = $r8]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r4 -> [$r4 = new java.util.ArrayList]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r1 = $r0[l1]]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
arr$ -> [arr$ = args]
len$ -> [len$ = lengthof arr$]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
each -> [each = arr$[i$]]
$r13 -> [$r2 = l2]
classes -> [classes = $r4]
i$ -> [i$ = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
result -> [result = $r0]
i$ -> [$r0 = new java.util.AbstractList$Itr]
e -> [e = $r6]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
listener -> [listener = $r9]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r2 = $r1[l1]]
$r9 -> [$r9 = new org.junit.internal.TextListener]
this -> [this := @this: org.junit.runner.JUnitCore]
args -> [args := @parameter1: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
each -> [each = (org.junit.runner.notification.Failure) $r13]
i$ -> [i$ = i$ + 1]
$r6 -> [$r6 := @caughtexception]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (4458f495)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (97576a8)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (5f051ef6)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT return (4b8cb334)
NEW RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Time elapsed: 613.558536213
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming FuncTypeTest... 
Transforming TestRemoveNoLeakCall... 
Transforming SimpleTest... 
Transforming ExitTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeak... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 08:09:43 CET 2013
Soot has run for 11 min. 18 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 19 08:09:43 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.7 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
[Spark] Propagation in 53.7 seconds.
[Spark] Solution found in 53.7 seconds.
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.214524747 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 3702479 edges propagated.
Solver done in 431.407212136seconds.
Pair result,[result = $r0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (1ae10f3b)
RESULTS:
-------------------
result -> [result = $r0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 0]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (10e41e7)
RESULTS:
-------------------
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
e -> [e = $r7]
description -> [$r1 = new org.junit.runner.Description]
l6 -> [l6 = l6 + 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
result -> [result = $r0]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
l8 -> [l8 = args]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
each -> [each = l8[l6]]
args -> [args := @parameter1: java.lang.String[]]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
failure -> [failure = $r9]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r2 = l2]
$r14 -> [$r2 = $r1[l1]]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r7 -> [$r7 := @caughtexception]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
l7 -> [l7 = lengthof args]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
classes -> [classes = $r4]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
l6 -> [l6 = 0]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
listener -> [listener = $r10]
$r14 -> [$r1 = $r0[l1]]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (baaa1d9)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (488ac0b8)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (3fdf019f)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (4eb8c741)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 93305 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 7.3464E-5 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 22.2 seconds.
[Spark] Solution found in 22.2 seconds.
Updating callgraph took 23.010889397 seconds, callgraph now has 93305 edges.
Updating reachable methods took 8.056E-6 seconds
Graph patched in 23.227487229 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.123146056 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
CFG changeset computation took 2.342622288 seconds
Removing 37 expired nodes...
Expired nodes removed in 3.018913231 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.033670162 seconds
Phase 2 took 0.796506684 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.098500736 seconds
Actually processed 3 of 62 expired edges in 4.728760021 seconds
Processing worklist for values...
Worklist processing done, 6010 edges processed.
IDE results updated in 95.696999908 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (7dbeec65)
NEW RESULTS:
-------------------
result -> [result = $r0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 0]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (2a801a82)
NEW RESULTS:
-------------------
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
result -> [result = $r0]
$r13 -> [$r2 = $r1[l1]]
$r4 -> [$r4 = new java.util.ArrayList]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r2 = l2]
$r13 -> [$r1 = $r0[l1]]
$r3 -> [$r0 = new java.lang.String]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
i$ -> [i$ = i$ + 1]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
len$ -> [len$ = lengthof arr$]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
listener -> [listener = $r9]
i$ -> [i$ = 0]
missingClasses -> [missingClasses = $r4]
$r6 -> [$r6 := @caughtexception]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
arr$ -> [arr$ = args]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
classes -> [classes = $r4]
$r0 -> [l0 := @this: java.lang.StringBuilder]
e -> [e = $r6]
each -> [each = arr$[i$]]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
failure -> [failure = $r8]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (baaa1d9)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (488ac0b8)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (3fdf019f)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT return (4eb8c741)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 554.724794133
Transforming TestRemoveLeak... 
Transforming TestRemoveNoLeakCall... 
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 19 08:19:55 CET 2013
Soot has run for 10 min. 12 sec.
newVersionJU_Propagate finished.
Test run was successful
