Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 05:50:22 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 4.152065741 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 683.941690447seconds.
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair args,[args := @parameter1: java.lang.String[]]
Pair result,[result = $r0]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $b0,[$b0 = 1]
Pair $b0,[$b0 = 0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
result -> [result = $r0]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
failure -> [failure = $r9]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = null]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
l6 -> [l6 = l6 + 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
l7 -> [l7 = lengthof args]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r2 = l2]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$z0 -> [$z0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
l6 -> [l6 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r1 = $r0[$i0]]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
each -> [each = l8[l6]]
$z0 -> [$z0 = 1]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [l2 = l1]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r1 = l0]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r2 = l4]
$r14 -> [l1 = $r0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r1 = null]
$r0 -> [l0 := @this: java.lang.StringBuilder]
classes -> [classes = $r4]
$r14 -> [l3 = $r3]
e -> [e = $r7]
l8 -> [l8 = args]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r4[$i1]]
$z0 -> [$z0 = 1]
$r7 -> [$r7 := @caughtexception]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
listener -> [listener = $r10]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
ORIGINAL size: 151
Original call graph has 159898 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.38982E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 5.184669802 seconds, callgraph now has 159901 edges.
Updating reachable methods took 5.1138E-5 seconds
Graph patched in 5.775354256 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.990022712 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
CFG changeset computation took 4.2410944 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.93163988 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 5.895438295 seconds
Actually processed 1 of 41 expired edges in 15.059353711 seconds
Processing worklist for values...
Worklist processing done, 17138 edges processed.
IDE results updated in 173.906273791 seconds.
--------------
NEW RESULTS
--------------
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = l0]
$r13 -> [l3 = $r3]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
result -> [result = $r0]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [l2 = l1]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 0]
l7 -> [l7 = l7 + 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r1 = $r0[$i0]]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
each -> [each = l9[l7]]
$z0 -> [$z0 = 1]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
failure -> [failure = $r8]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 1]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r2 = l4]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
c -> [c = null]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [l1 = $r2[$i1]]
l9 -> [l9 = args]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
e -> [e = $r6]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 0]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
classes -> [classes = $r4]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r6 -> [$r6 := @caughtexception]
l7 -> [l7 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
l8 -> [l8 = lengthof args]
$r13 -> [l1 = $r0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [l1 = $r4[$i1]]
listener -> [listener = $r9]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r1 = null]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
New result: c -> [c = null]
Time elapsed: 871.221946871
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveNoLeakCall... 
Transforming TestRemoveLeak... 
Transforming SimpleTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 06:06:03 CET 2013
Soot has run for 15 min. 41 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 06:06:03 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 4.534930997 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935419 edges propagated.
Solver done in 687.795735401seconds.
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair result,[result = $r0]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $b0,[$b0 = 0]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
$z0 -> [$z0 = 0]
$r14 -> [$r2 = $r1[$i1]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
result -> [result = $r0]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
each -> [each = l8[l6]]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
listener -> [listener = $r10]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
l7 -> [l7 = lengthof args]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 1]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r1 = l0]
$r14 -> [l1 = $r0]
$r14 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
l6 -> [l6 = 0]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r2 = l4]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
l6 -> [l6 = l6 + 1]
l8 -> [l8 = args]
$r14 -> [$r2 = l2]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
failure -> [failure = $r9]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
e -> [e = $r7]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = new org.junit.internal.TextListener]
classes -> [classes = $r4]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [$r2 = $r1[l1]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [l3 = $r3]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r1 = null]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [l2 = l1]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
ORIGINAL size: 151
Original call graph has 159898 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.18662E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.837077097 seconds, callgraph now has 159901 edges.
Updating reachable methods took 8.1E-6 seconds
Graph patched in 3.124675481 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 3.420255574 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
CFG changeset computation took 3.908302177 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.937892613 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 58.793740936 seconds
Actually processed 1 of 41 expired edges in 63.523393983 seconds
Processing worklist for values...
Worklist processing done, 17139 edges processed.
IDE results updated in 168.187760491 seconds.
--------------
NEW RESULTS
--------------
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
l9 -> [l9 = args]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
result -> [result = $r0]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
e -> [e = $r6]
$z0 -> [$z0 = 1]
c -> [c = null]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [l1 = $r0]
$z0 -> [$z0 = 1]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
l7 -> [l7 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
failure -> [failure = $r8]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
l8 -> [l8 = lengthof args]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
$r6 -> [$r6 := @caughtexception]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [l3 = $r3]
$z0 -> [$z0 = 1]
$r13 -> [l1 = $r4[$i1]]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r1 = l0]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r1 = l0]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
l7 -> [l7 = l7 + 1]
$r13 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
each -> [each = l9[l7]]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
classes -> [classes = $r4]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
l9 -> [$r0 = new java.util.AbstractList$Itr]
listener -> [listener = $r9]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [l2 = l1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r2 = $r1[l1]]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [l1 = $r2[$i1]]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 0]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r2 = l2]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
New result: c -> [c = null]
Time elapsed: 867.181705869
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming TestRemoveLeakInFunction... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveNoLeakCall... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeak... 
Transforming ExitTest... 
Transforming TestRemoveLeakingCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 06:21:18 CET 2013
Soot has run for 15 min. 14 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 06:21:18 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.926556022 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 633.719597401seconds.
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
l7 -> [l7 = lengthof args]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
this -> [this := @this: org.junit.runner.JUnitCore]
result -> [result = $r0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r0]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r7 -> [$r7 := @caughtexception]
$z0 -> [$z0 = 1]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
l6 -> [l6 = 0]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r2 = l2]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r1 = l0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
e -> [e = $r7]
each -> [each = l8[l6]]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
listener -> [listener = $r10]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [l3 = $r3]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [l2 = l1]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
l8 -> [l8 = args]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
classes -> [classes = $r4]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
failure -> [failure = $r9]
$z0 -> [$z0 = 0]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
l6 -> [l6 = l6 + 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l4]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4[$i0]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 1]
ORIGINAL size: 151
Original call graph has 159898 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.11772E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.775703589 seconds, callgraph now has 159901 edges.
Updating reachable methods took 7.078E-6 seconds
Graph patched in 3.037563038 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 3.828257664 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
CFG changeset computation took 3.784586515 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.882884231 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 57.743583976 seconds
Actually processed 1 of 41 expired edges in 64.998626558 seconds
Processing worklist for values...
Worklist processing done, 17128 edges processed.
IDE results updated in 207.327499355 seconds.
--------------
NEW RESULTS
--------------
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
this -> [this := @this: org.junit.runner.JUnitCore]
result -> [result = $r0]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
listener -> [listener = $r9]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [l2 = l1]
l7 -> [l7 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = null]
$r13 -> [$r1 = null]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [l1 = $r0]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
l7 -> [l7 = l7 + 1]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
l8 -> [l8 = lengthof args]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
classes -> [classes = $r4]
$r13 -> [$r2 = $r1[$i1]]
e -> [e = $r6]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4]
$r13 -> [l3 = $r3]
$z0 -> [$z0 = 0]
$r6 -> [$r6 := @caughtexception]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r4 -> [$r4 = new java.util.ArrayList]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
failure -> [failure = $r8]
each -> [each = l9[l7]]
$r13 -> [$r1 = l0]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [l1 = $r4[$i1]]
c -> [c = null]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 1]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
l9 -> [l9 = args]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
New result: c -> [c = null]
Time elapsed: 850.946071353
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeak... 
Transforming TestRemoveNoLeakCall... 
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming ExitTest... 
Transforming TestRemoveLeakInFunction... 
Transforming DeleteAssignmentInLoopTest... 
Transforming DeleteInOutLoopTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 06:36:16 CET 2013
Soot has run for 14 min. 58 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 06:36:16 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.895659627 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935419 edges propagated.
Solver done in 594.316838908seconds.
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [l3 = $r3]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
classes -> [classes = $r4]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
l6 -> [l6 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r1 = l0]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [l1 = $r0]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
l6 -> [l6 = l6 + 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
l8 -> [l8 = args]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
missingClasses -> [missingClasses = $r4]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 0]
each -> [each = l8[l6]]
result -> [result = $r0]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
l7 -> [l7 = lengthof args]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r1 = $r0[$i0]]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r2 = $r1[l1]]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [$r2 = l4]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
failure -> [failure = $r9]
$z0 -> [$z0 = 0]
listener -> [listener = $r10]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r2 = l2]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [l2 = l1]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
e -> [e = $r7]
ORIGINAL size: 151
Original call graph has 159898 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.20831E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.855918026 seconds, callgraph now has 159901 edges.
Updating reachable methods took 7.84E-6 seconds
Graph patched in 3.175494017 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.945346337 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
CFG changeset computation took 3.8332971 seconds
Removing 31 expired nodes...
Expired nodes removed in 4.591843883 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 7.479800406 seconds
Actually processed 1 of 41 expired edges in 14.776004503 seconds
Processing worklist for values...
Worklist processing done, 17128 edges processed.
IDE results updated in 174.086045401 seconds.
--------------
NEW RESULTS
--------------
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r1 = l0]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
classes -> [classes = $r4]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r1 = null]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
l9 -> [l9 = args]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 0]
c -> [c = null]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [l1 = $r0]
$z0 -> [$z0 = 1]
l8 -> [l8 = lengthof args]
$z0 -> [$z0 = 1]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 0]
missingClasses -> [missingClasses = $r4]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [l1 = $r4[$i1]]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
listener -> [listener = $r9]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
each -> [each = l9[l7]]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
l7 -> [l7 = l7 + 1]
$r13 -> [$r1 = $r0[$i0]]
$r3 -> [$r0 = new java.lang.String]
result -> [result = $r0]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r2 = l4]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
l7 -> [l7 = 0]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = $r1[$i1]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r1 = l0]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = null]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
e -> [e = $r6]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r6 -> [$r6 := @caughtexception]
failure -> [failure = $r8]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [l2 = l1]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r2 = l2]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$r13 -> [l3 = $r3]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
New result: c -> [c = null]
Time elapsed: 777.527515498
Transforming TestRemoveLeakInFunction... 
Transforming DeleteAssignmentInLoopTest... 
Transforming DeleteInOutLoopTest... 
Transforming FuncTypeTest... 
Transforming TestRemoveNoLeakCall... 
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming SimpleTest... 
Transforming TestRemoveLeakingCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 06:50:05 CET 2013
Soot has run for 13 min. 48 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 06:50:05 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.937523983 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935410 edges propagated.
Solver done in 547.650114873seconds.
Pair result,[result = $r0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r3 -> [$r0 = new java.lang.String]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l2]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [l3 = $r3]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
classes -> [classes = $r4]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$z0 -> [$z0 = 1]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r2 = l4]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r0 -> [l0 := @this: java.lang.StringBuilder]
l7 -> [l7 = lengthof args]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 1]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
listener -> [listener = $r10]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [$r1 = l0]
$r14 -> [l1 = $r0]
each -> [each = l8[l6]]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [l2 = l1]
args -> [args := @parameter1: java.lang.String[]]
l6 -> [l6 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r1 = l0]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
failure -> [failure = $r9]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
l6 -> [l6 = l6 + 1]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 1]
e -> [e = $r7]
l8 -> [l8 = args]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
result -> [result = $r0]
ORIGINAL size: 151
Original call graph has 159898 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.6767E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 59.141327336 seconds, callgraph now has 159901 edges.
Updating reachable methods took 7.682E-6 seconds
Graph patched in 59.429119388 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.872255504 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
CFG changeset computation took 3.795337848 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.859495768 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 8.275757733 seconds
Actually processed 1 of 41 expired edges in 15.597035944 seconds
Processing worklist for values...
Worklist processing done, 17128 edges processed.
IDE results updated in 180.008965379 seconds.
--------------
NEW RESULTS
--------------
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
l9 -> [l9 = args]
e -> [e = $r6]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r3 -> [$r0 = new java.lang.String]
c -> [c = null]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
each -> [each = l9[l7]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [l2 = l1]
$r13 -> [l1 = $r0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
classes -> [classes = $r4]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
l7 -> [l7 = 0]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [l1 := @parameter0: java.lang.Object]
l7 -> [l7 = l7 + 1]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r1 = null]
l8 -> [l8 = lengthof args]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = l0]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r6 -> [$r6 := @caughtexception]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$r13 -> [$r3 = $r2[$i0]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 1]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
listener -> [listener = $r9]
$r4 -> [$r4 = new java.util.ArrayList]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = l0]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r2 = $r1[l1]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
failure -> [failure = $r8]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [l3 = $r3]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r5 = $r4[$i0]]
result -> [result = $r0]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
New result: c -> [c = null]
Time elapsed: 793.001377426
Transforming TestRemoveLeakInFunction... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveNoLeakCall... 
Transforming ExitTest... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeak... 
Transforming SimpleTest... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 07:04:02 CET 2013
Soot has run for 13 min. 56 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 07:04:02 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.894151228 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 496.478763332seconds.
Pair result,[result = $r0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
classes -> [classes = $r4]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
listener -> [listener = $r10]
$r14 -> [$r2 = l4]
$r0 -> [l0 := @this: java.lang.StringBuilder]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r1 = l0]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
failure -> [failure = $r9]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 = $r0]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r2 = l2]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
missingClasses -> [missingClasses = $r4]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
each -> [each = l8[l6]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
result -> [result = $r0]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
l7 -> [l7 = lengthof args]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
l8 -> [l8 = args]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
l6 -> [l6 = 0]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
e -> [e = $r7]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [l3 = $r3]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
description -> [$r1 = new org.junit.runner.Description]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
l6 -> [l6 = l6 + 1]
$r14 -> [l2 = l1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r7 -> [$r7 := @caughtexception]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
ORIGINAL size: 151
Original call graph has 159898 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.17507E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 5.148494069 seconds, callgraph now has 159901 edges.
Updating reachable methods took 7.976E-6 seconds
Graph patched in 5.400462063 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.863294656 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
CFG changeset computation took 3.762293491 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.766883334 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 8.931586358 seconds
Actually processed 1 of 41 expired edges in 67.950637209 seconds
Processing worklist for values...
Worklist processing done, 17128 edges processed.
IDE results updated in 186.511927931 seconds.
--------------
NEW RESULTS
--------------
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
listener -> [listener = $r9]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r2 = l2]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [$r2 = l4]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [l2 = l1]
$r13 -> [$r1 = null]
$r13 -> [$r1 = l0]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
c -> [c = null]
classes -> [classes = $r4]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [l3 = $r3]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [l1 = $r4[$i1]]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 1]
failure -> [failure = $r8]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
l7 -> [l7 = 0]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 1]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
each -> [each = l9[l7]]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r1 = l0]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
l9 -> [l9 = args]
$r6 -> [$r6 := @caughtexception]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 1]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
result -> [result = $r0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [l1 = $r0]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
l7 -> [l7 = l7 + 1]
description -> [$r1 = new org.junit.runner.Description]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
e -> [e = $r6]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
l8 -> [l8 = lengthof args]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
New result: c -> [c = null]
Time elapsed: 694.266847356
Transforming DeleteInOutLoopTest... 
Transforming ExitTest... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeak... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteAssignmentInLoopTest... 
Transforming SimpleTest... 
Transforming TestRemoveNoLeakCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 07:16:19 CET 2013
Soot has run for 12 min. 17 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 07:16:19 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.934135188 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935411 edges propagated.
Solver done in 576.262338181seconds.
Pair $b0,[$b0 = 0]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair $b0,[$b0 = 1]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
l8 -> [$r0 = new java.util.AbstractList$Itr]
l7 -> [l7 = lengthof args]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r2 = l2]
l6 -> [l6 = 0]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
l6 -> [l6 = l6 + 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [l1 = $r0]
$r14 -> [l3 = $r3]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
each -> [each = l8[l6]]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
classes -> [classes = $r4]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = l0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
args -> [args := @parameter1: java.lang.String[]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
e -> [e = $r7]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
missingClasses -> [missingClasses = $r4]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r4 -> [$r4 = new java.util.ArrayList]
failure -> [failure = $r9]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
l8 -> [l8 = args]
$z0 -> [$z0 = 0]
result -> [result = $r0]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [l2 = l1]
$r14 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
listener -> [listener = $r10]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
ORIGINAL size: 151
Original call graph has 159898 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.16449E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.931181763 seconds, callgraph now has 159901 edges.
Updating reachable methods took 7.798E-6 seconds
Graph patched in 3.198091931 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 4.889071962 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
CFG changeset computation took 3.758690918 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.825020654 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 7.890497596 seconds
Actually processed 1 of 41 expired edges in 73.468514757 seconds
Processing worklist for values...
Worklist processing done, 17138 edges processed.
IDE results updated in 206.041434342 seconds.
--------------
NEW RESULTS
--------------
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
listener -> [listener = $r9]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
c -> [c = null]
classes -> [classes = $r4]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [$r2 = $r1[$i1]]
l8 -> [l8 = lengthof args]
$z0 -> [$z0 = 0]
$r13 -> [l3 = $r3]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 0]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
failure -> [failure = $r8]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [$r2 = l4]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [l1 = $r0]
$r13 -> [l2 = l1]
$r13 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r1 = l0]
$r13 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 1]
$r6 -> [$r6 := @caughtexception]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
l7 -> [l7 = 0]
args -> [args := @parameter1: java.lang.String[]]
each -> [each = l9[l7]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
e -> [e = $r6]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r1 = null]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r1 = l0]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 0]
result -> [result = $r0]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
l7 -> [l7 = l7 + 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
l9 -> [l9 = args]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l2]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
New result: c -> [c = null]
Time elapsed: 793.434109789
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming FuncTypeTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveNoLeakCall... 
Transforming SimpleTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 07:30:16 CET 2013
Soot has run for 13 min. 56 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 07:30:16 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.906425362 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935421 edges propagated.
Solver done in 561.377898947seconds.
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $b0,[$b0 = 1]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair args,[args := @parameter1: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
this -> [this := @this: org.junit.runner.JUnitCore]
failure -> [failure = $r9]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r7 -> [$r7 := @caughtexception]
$z0 -> [$z0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
classes -> [classes = $r4]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
l8 -> [l8 = args]
$r14 -> [l2 = l1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = l2]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [l1 = $r0]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l3 = $r3]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 := @parameter0: java.lang.Object]
each -> [each = l8[l6]]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 1]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
l6 -> [l6 = l6 + 1]
$r14 -> [$r1 = null]
listener -> [listener = $r10]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
result -> [result = $r0]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
e -> [e = $r7]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
l6 -> [l6 = 0]
each -> [each = (org.junit.runner.notification.Failure) $r14]
l7 -> [l7 = lengthof args]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l4]
$z0 -> [$z0 = 1]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 1]
ORIGINAL size: 151
Original call graph has 159898 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.13862E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.91114867 seconds, callgraph now has 159901 edges.
Updating reachable methods took 7.566E-6 seconds
Graph patched in 3.187506622 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 5.224478177 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
CFG changeset computation took 3.783231265 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.774120714 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 11.653897792 seconds
Actually processed 1 of 41 expired edges in 90.146302196 seconds
Processing worklist for values...
Worklist processing done, 17130 edges processed.
IDE results updated in 223.852238617 seconds.
--------------
NEW RESULTS
--------------
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
e -> [e = $r6]
$r13 -> [l1 = $r0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
each -> [each = l9[l7]]
c -> [c = null]
$r13 -> [l1 := @parameter0: java.lang.Object]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r1 = l0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
classes -> [classes = $r4]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r6 -> [$r6 := @caughtexception]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r1 = null]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [l1 = $r4[$i1]]
l7 -> [l7 = l7 + 1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [l3 = $r3]
$z0 -> [$z0 = 1]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 0]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 0]
l7 -> [l7 = 0]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [$r2 = $r1[l1]]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
result -> [result = $r0]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
l8 -> [l8 = lengthof args]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [$r2 = l4]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r1 = null]
l9 -> [l9 = args]
$z0 -> [$z0 = 1]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
listener -> [listener = $r9]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r2 = l2]
$r13 -> [l2 = l1]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
failure -> [failure = $r8]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
New result: c -> [c = null]
Time elapsed: 796.663199186
Transforming TestRemoveLeak... 
Transforming SimpleTest... 
Transforming TestRemoveNoLeakCall... 
Transforming ExitTest... 
Transforming TestRemoveLeakingCall... 
Transforming FuncTypeTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming DeleteAssignmentInLoopTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 07:44:18 CET 2013
Soot has run for 14 min. 1 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 07:44:18 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.911637293 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935419 edges propagated.
Solver done in 495.729403521seconds.
Pair args,[args := @parameter1: java.lang.String[]]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair result,[result = $r0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
l6 -> [l6 = l6 + 1]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$z0 -> [$z0 = 0]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = l0]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
e -> [e = $r7]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
l8 -> [l8 = args]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r1 = l0]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 1]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [l3 = $r3]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
classes -> [classes = $r4]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
each -> [each = l8[l6]]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
l6 -> [l6 = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r4[$i1]]
$z0 -> [$z0 = 0]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r14 -> [$r2 = l2]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
result -> [result = $r0]
$z0 -> [$z0 = 0]
failure -> [failure = $r9]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [l2 = l1]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 1]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
l7 -> [l7 = lengthof args]
listener -> [listener = $r10]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 1]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [$r1 = null]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
ORIGINAL size: 151
Original call graph has 159898 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.18111E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 3.033899331 seconds, callgraph now has 159901 edges.
Updating reachable methods took 7.783E-6 seconds
Graph patched in 3.310741523 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 4.837356277 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
CFG changeset computation took 3.858472349 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.895590452 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 69.525294217 seconds
Actually processed 1 of 41 expired edges in 74.879506916 seconds
Processing worklist for values...
Worklist processing done, 17128 edges processed.
IDE results updated in 194.927450837 seconds.
--------------
NEW RESULTS
--------------
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r2 = l4]
$r13 -> [$r1 = $r0[$i0]]
description -> [$r1 = new org.junit.runner.Description]
l7 -> [l7 = l7 + 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
c -> [c = null]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l2]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [l1 = $r0]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r1 = l0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r1 = null]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 1]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r4 -> [$r4 = new java.util.ArrayList]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
classes -> [classes = $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
l8 -> [l8 = lengthof args]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 0]
$r13 -> [l3 = $r3]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r1 = l0]
result -> [result = $r0]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 1]
l9 -> [l9 = args]
$z0 -> [$z0 = 0]
l7 -> [l7 = 0]
listener -> [listener = $r9]
$z0 -> [$z0 = 0]
$r6 -> [$r6 := @caughtexception]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [l1 = $r4[$i1]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 0]
$r13 -> [l1 := @parameter0: java.lang.Object]
failure -> [failure = $r8]
each -> [each = l9[l7]]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
e -> [e = $r6]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [l2 = l1]
New result: c -> [c = null]
Time elapsed: 701.82224625
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeak... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming ExitTest... 
Transforming TestRemoveNoLeakCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 07:56:43 CET 2013
Soot has run for 12 min. 25 sec.
removeStmtFromLoopJU_Propagate finished.
Starting removeStmtFromLoopJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 07:56:43 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.07974824 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 548.176249357seconds.
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
--ORIGINAL METHOD
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
--------------
ORIGINAL RESULTS
--------------
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [l1 = $r0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [l3 = $r3]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 0]
missingClasses -> [missingClasses = $r4]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r1 = l0]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r3 = $r2[$i0]]
classes -> [classes = $r4]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
e -> [e = $r7]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r2 = l2]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 1]
$r14 -> [l2 = l1]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
failure -> [failure = $r9]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [$r2 = l4]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
l8 -> [l8 = args]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r1 = null]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
result -> [result = $r0]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r5 = $r4[$i0]]
l8 -> [$r0 = new java.util.AbstractList$Itr]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = null]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
l6 -> [l6 = l6 + 1]
$z0 -> [$z0 = 1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r1 = $r0[l1]]
l6 -> [l6 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 1]
listener -> [listener = $r10]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r1 = l0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r3 -> [$r0 = new java.lang.String]
each -> [each = l8[l6]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
l7 -> [l7 = lengthof args]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
ORIGINAL size: 151
Original call graph has 159898 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.13577E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.91104775 seconds, callgraph now has 159901 edges.
Updating reachable methods took 7.422E-6 seconds
Graph patched in 3.183888657 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 4.495748008 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> c = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l9 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = lengthof args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l7 = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l7 < l8 goto each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = <java.lang.System: java.io.PrintStream out>
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> each = l9[l7]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> goto [?= l7 = l7 + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> l7 = l7 + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l7 < l8 goto each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = l7 + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = lengthof args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l9 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l9[l7]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r3 = virtualinvoke c.<java.lang.Class: java.lang.String toString()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r1 = <java.lang.System: java.io.PrintStream out>
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) c = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l7 = l7 + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>(c)
CFG changeset computation took 3.866381119 seconds
Removing 31 expired nodes...
Expired nodes removed in 3.947501528 seconds.
Updating 5 new edges...
New edges updated
Deleting 36 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 62.917942958 seconds
Actually processed 1 of 41 expired edges in 68.066315934 seconds
Processing worklist for values...
Worklist processing done, 17128 edges processed.
IDE results updated in 197.729164051 seconds.
--------------
NEW RESULTS
--------------
$r13 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r1 = $r0[$i0]]
failure -> [failure = $r8]
c -> [c = null]
$r6 -> [$r6 := @caughtexception]
$r13 -> [$r1 = l0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [l2 = l1]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r4 -> [$r4 = new java.util.ArrayList]
l7 -> [l7 = 0]
classes -> [classes = $r4]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r2 = l2]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r1 -> [$r1 = <java.lang.System: java.io.PrintStream out>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [$r1 = null]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r2 = l4]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
result -> [result = $r0]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r1 = null]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [l3 = $r3]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = l0]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
l9 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
each -> [each = l9[l7]]
$r13 -> [$r1 = $r0[l1]]
listener -> [listener = $r9]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
l9 -> [l9 = args]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
e -> [e = $r6]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [l1 = $r0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
l7 -> [l7 = l7 + 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
l8 -> [l8 = lengthof args]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
New result: c -> [c = null]
Time elapsed: 756.757886857
Transforming FuncTypeTest... 
Transforming TestRemoveLeakInFunction... 
Transforming DeleteAssignmentInLoopTest... 
Transforming SimpleTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeak... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveNoLeakCall... 
Transforming ExitTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 08:10:03 CET 2013
Soot has run for 13 min. 19 sec.
removeStmtFromLoopJU_Propagate finished.
Test run was successful
