Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 10:31:48 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 4.180627437 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 619.870089159seconds.
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair args,[args := @parameter1: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (20890a72)
RESULTS:
-------------------
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter1: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
$b0 -> [$b0 = 1]
result -> [result = $r0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (56b2e248)
RESULTS:
-------------------
$z0 -> [$z0 = 0]
failure -> [failure = $r9]
classes -> [classes = $r4]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0[l1]]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$z0 -> [$z0 = 1]
$r14 -> [l3 = $r3]
$z0 -> [$z0 = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
e -> [e = $r7]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [l2 = l1]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
l6 -> [l6 = 0]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
l8 -> [l8 = args]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
l7 -> [l7 = lengthof args]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r2 = l2]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r1 = null]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 0]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 1]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 1]
l6 -> [l6 = l6 + 1]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [$r1 = $r0[l1]]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
listener -> [listener = $r10]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
result -> [result = $r0]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 1]
$r7 -> [$r7 := @caughtexception]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
each -> [each = l8[l6]]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [l1 = $r0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (60510b29)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (6d0925cf)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (2964de40)
RESULTS:
-------------------
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT return (7c99d173)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 159898 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.9528E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 15.382583835 seconds, callgraph now has 159898 edges.
Updating reachable methods took 3.5361E-5 seconds
Graph patched in 15.931414497 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.971695311 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
CFG changeset computation took 4.161486418 seconds
Removing 37 expired nodes...
Expired nodes removed in 43.302079191 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.063515883 seconds
Phase 2 took 0.080931874 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 52.488170643 seconds
Actually processed 3 of 62 expired edges in 58.402486509 seconds
Processing worklist for values...
Worklist processing done, 17434 edges processed.
IDE results updated in 221.371114265 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (4f7e6aab)
NEW RESULTS:
-------------------
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter1: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
$b0 -> [$b0 = 1]
result -> [result = $r0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (7a622737)
NEW RESULTS:
-------------------
$z0 -> [$z0 = 0]
classes -> [classes = $r4]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
each -> [each = arr$[i$]]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r2 = l4]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
failure -> [failure = $r8]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 0]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
i$ -> [i$ = 0]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
listener -> [listener = $r9]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r1 = l0]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = l0]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = $r2[$i0]]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 1]
e -> [e = $r6]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
description -> [$r1 = new org.junit.runner.Description]
len$ -> [len$ = lengthof arr$]
arr$ -> [arr$ = args]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [l1 = $r0]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r6 -> [$r6 := @caughtexception]
$r13 -> [l2 = l1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
result -> [result = $r0]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
i$ -> [i$ = i$ + 1]
$z0 -> [$z0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [l3 = $r3]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = null]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (60510b29)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (6d0925cf)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (2964de40)
NEW RESULTS:
-------------------
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT return (7c99d173)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 864.948527244
Transforming TestRemoveNoLeakCall... 
Transforming ExitTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeak... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeakInFunction... 
Transforming SimpleTest... 
Transforming TestRemoveLeakingCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 10:47:20 CET 2013
Soot has run for 15 min. 31 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 10:47:20 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.934719963 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935419 edges propagated.
Solver done in 539.94243224seconds.
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $b0,[$b0 = 1]
Pair args,[args := @parameter1: java.lang.String[]]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair $b0,[$b0 = 0]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair result,[result = $r0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (2265c385)
RESULTS:
-------------------
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
$b0 -> [$b0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
result -> [result = $r0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (b108c1c)
RESULTS:
-------------------
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 1]
classes -> [classes = $r4]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
result -> [result = $r0]
description -> [$r1 = new org.junit.runner.Description]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 1]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
l6 -> [l6 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
e -> [e = $r7]
$r3 -> [$r0 = new java.lang.String]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r1 = l0]
each -> [each = l8[l6]]
$z0 -> [$z0 = 0]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [l3 = $r3]
$r14 -> [$r2 = l4]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 1]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
l6 -> [l6 = l6 + 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
each -> [each = (org.junit.runner.notification.Failure) $r14]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r0]
failure -> [failure = $r9]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [l2 = l1]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [l1 := @parameter0: java.lang.Object]
l7 -> [l7 = lengthof args]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r4[$i1]]
listener -> [listener = $r10]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r2 = l2]
l8 -> [l8 = args]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r1 = null]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (27e405a4)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (62d4a950)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (4bb3c921)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (52cfd732)
RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Original call graph has 159898 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.12813E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 49.906152593 seconds, callgraph now has 159898 edges.
Updating reachable methods took 7.467E-6 seconds
Graph patched in 50.158597106 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.838664298 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
CFG changeset computation took 3.732873085 seconds
Removing 37 expired nodes...
Expired nodes removed in 4.468828225 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.065867807 seconds
Phase 2 took 12.006312121 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.058752752 seconds
Actually processed 3 of 62 expired edges in 20.192359789 seconds
Processing worklist for values...
Worklist processing done, 17096 edges processed.
IDE results updated in 122.672705407 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (3d2218f7)
NEW RESULTS:
-------------------
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
$b0 -> [$b0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
result -> [result = $r0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (779db404)
NEW RESULTS:
-------------------
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
classes -> [classes = $r4]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
len$ -> [len$ = lengthof arr$]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r2 = $r1[l1]]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
result -> [result = $r0]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [$r2 = $r1[$i1]]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
failure -> [failure = $r8]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
each -> [each = arr$[i$]]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
e -> [e = $r6]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r2 = l2]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = l0]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r6 -> [$r6 := @caughtexception]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [l2 = l1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
arr$ -> [arr$ = args]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r1 = null]
$r13 -> [l1 = $r0]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
$r13 -> [l3 = $r3]
listener -> [listener = $r9]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
i$ -> [i$ = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [l1 = $r4[$i1]]
i$ -> [i$ = i$ + 1]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r5 = $r4[$i0]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r1 = null]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (27e405a4)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (62d4a950)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (4bb3c921)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT return (52cfd732)
NEW RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Time elapsed: 718.807988627
Transforming SimpleTest... 
Transforming TestRemoveNoLeakCall... 
Transforming DeleteAssignmentInLoopTest... 
Transforming FuncTypeTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeak... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeakInFunction... 
Transforming ExitTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 11:00:10 CET 2013
Soot has run for 12 min. 49 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 11:00:10 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.922296601 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935419 edges propagated.
Solver done in 558.020822297seconds.
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (747f9c20)
RESULTS:
-------------------
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 1]
$b0 -> [$b0 = 0]
args -> [args := @parameter1: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
result -> [result = $r0]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (5e924ba3)
RESULTS:
-------------------
$r14 -> [l3 = $r3]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l2]
l7 -> [l7 = lengthof args]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r1 = null]
l8 -> [l8 = args]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
failure -> [failure = $r9]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 0]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
classes -> [classes = $r4]
$z0 -> [$z0 = 1]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0[l1]]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
e -> [e = $r7]
$z0 -> [$z0 = 1]
each -> [each = l8[l6]]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r2 = l4]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
l6 -> [l6 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [l1 = $r0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
this -> [this := @this: org.junit.runner.JUnitCore]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
l6 -> [l6 = l6 + 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r5 = $r4[$i0]]
result -> [result = $r0]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 0]
$r14 -> [l2 = l1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 0]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r1 = null]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0[$i0]]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
listener -> [listener = $r10]
$z0 -> [$z0 = 1]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = l0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (b3ae340)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (14d63633)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (18ce7928)
RESULTS:
-------------------
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT return (39247a6f)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 159898 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.22238E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.86161209 seconds, callgraph now has 159898 edges.
Updating reachable methods took 6.701E-6 seconds
Graph patched in 3.123809733 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.921064658 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
CFG changeset computation took 3.856963511 seconds
Removing 37 expired nodes...
Expired nodes removed in 5.309149328 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 10.452067202 seconds
Phase 2 took 4.641328819 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.052750991 seconds
Actually processed 3 of 62 expired edges in 21.483632111 seconds
Processing worklist for values...
Worklist processing done, 22985 edges processed.
IDE results updated in 142.223844599 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (6bbd2f15)
NEW RESULTS:
-------------------
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 1]
$b0 -> [$b0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter1: java.lang.String[]]
result -> [result = $r0]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (1f56c14a)
NEW RESULTS:
-------------------
$z0 -> [$z0 = 1]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 1]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
$r13 -> [l1 = $r0]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r6 -> [$r6 := @caughtexception]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
failure -> [failure = $r8]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 1]
e -> [e = $r6]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [l2 = l1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 0]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
classes -> [classes = $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 0]
$r13 -> [l1 = $r4[$i1]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
each -> [each = arr$[i$]]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
i$ -> [i$ = 0]
$r13 -> [l3 = $r3]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 0]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
arr$ -> [arr$ = args]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 1]
result -> [result = $r0]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
args -> [args := @parameter1: java.lang.String[]]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 1]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
i$ -> [i$ = i$ + 1]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 0]
len$ -> [len$ = lengthof arr$]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
listener -> [listener = $r9]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (b3ae340)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (14d63633)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (18ce7928)
NEW RESULTS:
-------------------
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT return (39247a6f)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 709.463381435
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming DeleteAssignmentInLoopTest... 
Transforming FuncTypeTest... 
Transforming ExitTest... 
Transforming TestRemoveNoLeakCall... 
Transforming TestRemoveLeak... 
Transforming TestRemoveLeakingCall... 
Transforming SimpleTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 11:12:44 CET 2013
Soot has run for 12 min. 34 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 11:12:44 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.85172696 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935410 edges propagated.
Solver done in 543.027321872seconds.
Pair $b0,[$b0 = 1]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair args,[args := @parameter1: java.lang.String[]]
Pair result,[result = $r0]
Pair $b0,[$b0 = 0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (2e515618)
RESULTS:
-------------------
$b0 -> [$b0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
args -> [args := @parameter1: java.lang.String[]]
result -> [result = $r0]
$b0 -> [$b0 = 0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (46a20df1)
RESULTS:
-------------------
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [l2 = l1]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$z0 -> [$z0 = 0]
l7 -> [l7 = lengthof args]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [l1 := @parameter0: java.lang.Object]
l6 -> [l6 = 0]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
failure -> [failure = $r9]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
e -> [e = $r7]
$z0 -> [$z0 = 0]
each -> [each = l8[l6]]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [l3 = $r3]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
classes -> [classes = $r4]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 0]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r3 = $r2[$i0]]
result -> [result = $r0]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
l8 -> [l8 = args]
$r14 -> [l1 = $r0]
$r14 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
description -> [$r1 = new org.junit.runner.Description]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r4 -> [$r4 = new java.util.ArrayList]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r1 = null]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
listener -> [listener = $r10]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 1]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
l6 -> [l6 = l6 + 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 0]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0[$i0]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 0]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = l0]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r2 = l2]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (650e6f9d)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (4985824f)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (3273301e)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT return (31014d5a)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 159898 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.16584E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.784418389 seconds, callgraph now has 159898 edges.
Updating reachable methods took 7.298E-6 seconds
Graph patched in 3.048780561 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 4.437680312 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
CFG changeset computation took 3.660209788 seconds
Removing 37 expired nodes...
Expired nodes removed in 4.275644599 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.062679883 seconds
Phase 2 took 56.253702246 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 6.278204431 seconds
Actually processed 3 of 62 expired edges in 68.547487135 seconds
Processing worklist for values...
Worklist processing done, 23119 edges processed.
IDE results updated in 198.345121714 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (4bd7f880)
NEW RESULTS:
-------------------
$b0 -> [$b0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
args -> [args := @parameter1: java.lang.String[]]
result -> [result = $r0]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
$b0 -> [$b0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (727e23f)
NEW RESULTS:
-------------------
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 0]
e -> [e = $r6]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
classes -> [classes = $r4]
$r13 -> [$r2 = l4]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
result -> [result = $r0]
$r13 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 1]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
len$ -> [len$ = lengthof arr$]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
this -> [this := @this: org.junit.runner.JUnitCore]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 0]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r1 = l0]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
i$ -> [i$ = 0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [l1 = $r0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [l2 = l1]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
each -> [each = arr$[i$]]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r2 = $r1[l1]]
$r6 -> [$r6 := @caughtexception]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r1 = l0]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [$r1 = null]
failure -> [failure = $r8]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
arr$ -> [arr$ = args]
$r13 -> [l3 = $r3]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r2 = l2]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
listener -> [listener = $r9]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
i$ -> [i$ = i$ + 1]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (650e6f9d)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (4985824f)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (3273301e)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT return (31014d5a)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 751.930973867
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeak... 
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveNoLeakCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 11:25:59 CET 2013
Soot has run for 13 min. 15 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 11:25:59 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.924527863 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935419 edges propagated.
Solver done in 542.302467451seconds.
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (3990cbcc)
RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
args -> [args := @parameter1: java.lang.String[]]
$b0 -> [$b0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
result -> [result = $r0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$b0 -> [$b0 = 0]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (6706035d)
RESULTS:
-------------------
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [l1 = $r4[$i1]]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
l6 -> [l6 = 0]
e -> [e = $r7]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = l0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
each -> [each = l8[l6]]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r5 = $r4[$i0]]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
result -> [result = $r0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
failure -> [failure = $r9]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r1 = l0]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
l7 -> [l7 = lengthof args]
classes -> [classes = $r4]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
args -> [args := @parameter1: java.lang.String[]]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
listener -> [listener = $r10]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [l1 := @parameter0: java.lang.Object]
description -> [$r1 = new org.junit.runner.Description]
l8 -> [l8 = args]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l4]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r2 = l2]
l6 -> [l6 = l6 + 1]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [l2 = l1]
$z0 -> [$z0 = 1]
$r14 -> [l3 = $r3]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [l1 = $r0]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (6a89ec5f)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (73047132)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (5e1bdcec)
RESULTS:
-------------------
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT return (25c985a6)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 159898 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.1525E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 3.903827033 seconds, callgraph now has 159898 edges.
Updating reachable methods took 7.553E-6 seconds
Graph patched in 4.170704383 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.901153634 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
CFG changeset computation took 3.771785453 seconds
Removing 37 expired nodes...
Expired nodes removed in 4.5037577 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.067326326 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.058984234 seconds
Phase 2 took 9.866128926 seconds
Actually processed 3 of 62 expired edges in 15.901340328 seconds
Processing worklist for values...
Worklist processing done, 17101 edges processed.
IDE results updated in 192.125893101 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (42b12b9a)
NEW RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
args -> [args := @parameter1: java.lang.String[]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
result -> [result = $r0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$b0 -> [$b0 = 0]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (73557dac)
NEW RESULTS:
-------------------
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
this -> [this := @this: org.junit.runner.JUnitCore]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
result -> [result = $r0]
$r13 -> [l1 = $r2[$i1]]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
listener -> [listener = $r9]
$r13 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r1 = null]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
classes -> [classes = $r4]
i$ -> [i$ = 0]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
i$ -> [i$ = i$ + 1]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
e -> [e = $r6]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [l3 = $r3]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0[l1]]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 0]
$r6 -> [$r6 := @caughtexception]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l1 = $r0]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
arr$ -> [arr$ = args]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
len$ -> [len$ = lengthof arr$]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
each -> [each = arr$[i$]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
failure -> [failure = $r8]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r1 = l0]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r2 = l4]
$r13 -> [l2 = l1]
$z0 -> [$z0 = 1]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (6a89ec5f)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (73047132)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (5e1bdcec)
NEW RESULTS:
-------------------
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT return (25c985a6)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 744.666047338
Transforming TestRemoveLeak... 
Transforming DeleteInOutLoopTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming FuncTypeTest... 
Transforming ExitTest... 
Transforming TestRemoveNoLeakCall... 
Transforming SimpleTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeakInFunction... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 11:39:11 CET 2013
Soot has run for 13 min. 12 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 11:39:11 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.938785061 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935419 edges propagated.
Solver done in 580.634257521seconds.
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair args,[args := @parameter1: java.lang.String[]]
Pair result,[result = $r0]
Pair $b0,[$b0 = 0]
Pair $b0,[$b0 = 1]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (3e737f8e)
RESULTS:
-------------------
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
result -> [result = $r0]
$b0 -> [$b0 = 0]
$b0 -> [$b0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (4589495e)
RESULTS:
-------------------
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 0]
each -> [each = l8[l6]]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 := @parameter0: java.lang.Object]
classes -> [classes = $r4]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 1]
l8 -> [l8 = args]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
l6 -> [l6 = 0]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = null]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
l6 -> [l6 = l6 + 1]
e -> [e = $r7]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r2 = l2]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r2 = l4]
$z0 -> [$z0 = 1]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r1 = l0]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
l7 -> [l7 = lengthof args]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 0]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
each -> [each = (org.junit.runner.notification.Failure) $r14]
args -> [args := @parameter1: java.lang.String[]]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [l3 = $r3]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 1]
result -> [result = $r0]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
listener -> [listener = $r10]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r0]
$r14 -> [l2 = l1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
failure -> [failure = $r9]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (1fd17af9)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (2a656216)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (5acbb0a8)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (72fc2fd6)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 159898 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.23758E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 3.832026785 seconds, callgraph now has 159898 edges.
Updating reachable methods took 7.342E-6 seconds
Graph patched in 4.089830811 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.861385824 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
CFG changeset computation took 3.722029224 seconds
Removing 37 expired nodes...
Expired nodes removed in 4.402970732 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.060768461 seconds
Phase 2 took 6.182871559 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 7.360281235 seconds
Actually processed 3 of 62 expired edges in 20.034718326 seconds
Processing worklist for values...
Worklist processing done, 23118 edges processed.
IDE results updated in 145.434566896 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (263e1cd1)
NEW RESULTS:
-------------------
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
args -> [args := @parameter1: java.lang.String[]]
result -> [result = $r0]
$b0 -> [$b0 = 0]
$b0 -> [$b0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (46fc86e9)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
len$ -> [len$ = lengthof arr$]
arr$ -> [arr$ = args]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [l3 = $r3]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
classes -> [classes = $r4]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = $r0]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r1 = null]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r2 = l2]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = l0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 1]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r3 -> [$r0 = new java.lang.String]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
each -> [each = arr$[i$]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = null]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
args -> [args := @parameter1: java.lang.String[]]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
i$ -> [i$ = 0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r6 -> [$r6 := @caughtexception]
result -> [result = $r0]
$z0 -> [$z0 = 1]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
listener -> [listener = $r9]
e -> [e = $r6]
i$ -> [i$ = i$ + 1]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
failure -> [failure = $r8]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$r13 -> [$r3 = $r2[$i0]]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 1]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [l2 = l1]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [$r2 = l4]
$r13 -> [l1 = $r4[$i1]]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (1fd17af9)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (2a656216)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (5acbb0a8)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (72fc2fd6)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 736.200123541
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming DeleteAssignmentInLoopTest... 
Transforming FuncTypeTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming SimpleTest... 
Transforming TestRemoveNoLeakCall... 
Transforming TestRemoveLeakingCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 11:52:11 CET 2013
Soot has run for 12 min. 59 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 11:52:11 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.391667046 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935410 edges propagated.
Solver done in 562.682459278seconds.
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (56e16b16)
RESULTS:
-------------------
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
result -> [result = $r0]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
$b0 -> [$b0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (5b7b248c)
RESULTS:
-------------------
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [l2 = l1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = null]
$r14 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r2 = l4]
l6 -> [l6 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
missingClasses -> [missingClasses = $r4]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
l7 -> [l7 = lengthof args]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r7 -> [$r7 := @caughtexception]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 0]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
classes -> [classes = $r4]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
l8 -> [l8 = args]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
listener -> [listener = $r10]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = l0]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
failure -> [failure = $r9]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
l6 -> [l6 = l6 + 1]
$r14 -> [l1 = $r0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
each -> [each = (org.junit.runner.notification.Failure) $r14]
each -> [each = l8[l6]]
$z0 -> [$z0 = 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$z0 -> [$z0 = 0]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r2 = l2]
$r14 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [l3 = $r3]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
e -> [e = $r7]
result -> [result = $r0]
$r14 -> [l1 = $r4[$i1]]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (40ccc79e)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (5efbf151)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (7eaecb7e)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (4e4bd8c1)
RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Original call graph has 159898 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.23319E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 3.344240941 seconds, callgraph now has 159898 edges.
Updating reachable methods took 7.189E-6 seconds
Graph patched in 3.612012309 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 2.919748553 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
CFG changeset computation took 3.77216713 seconds
Removing 37 expired nodes...
Expired nodes removed in 4.549848541 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 6.500163366 seconds
Phase 2 took 9.644512277 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.063900343 seconds
Actually processed 3 of 62 expired edges in 22.442940481 seconds
Processing worklist for values...
Worklist processing done, 22983 edges processed.
IDE results updated in 162.216898976 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (89eb52f)
NEW RESULTS:
-------------------
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
result -> [result = $r0]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
$b0 -> [$b0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (d8dd8bd)
NEW RESULTS:
-------------------
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 1]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
i$ -> [i$ = 0]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
missingClasses -> [missingClasses = $r4]
$r13 -> [l1 = $r0]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 0]
listener -> [listener = $r9]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
e -> [e = $r6]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 1]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
classes -> [classes = $r4]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [l2 = l1]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r1 = $r0[l1]]
len$ -> [len$ = lengthof arr$]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
each -> [each = arr$[i$]]
$r13 -> [$r1 = null]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r6 -> [$r6 := @caughtexception]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r1 = l0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [l3 = $r3]
$z0 -> [$z0 = 0]
arr$ -> [arr$ = args]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0[l1]]
$r9 -> [$r9 = new org.junit.internal.TextListener]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = l0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
failure -> [failure = $r8]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r2 = l4]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [l1 := @parameter0: java.lang.Object]
i$ -> [i$ = i$ + 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 0]
result -> [result = $r0]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (40ccc79e)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (5efbf151)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (7eaecb7e)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
GET RESULTS AT return (4e4bd8c1)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 735.061442599
Transforming FuncTypeTest... 
Transforming ExitTest... 
Transforming SimpleTest... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeak... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveNoLeakCall... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 12:05:10 CET 2013
Soot has run for 12 min. 59 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 12:05:10 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.121373908 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935420 edges propagated.
Solver done in 600.360857386seconds.
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $b0,[$b0 = 1]
Pair args,[args := @parameter1: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (1518f7c1)
RESULTS:
-------------------
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 1]
args -> [args := @parameter1: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
$b0 -> [$b0 = 0]
result -> [result = $r0]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (687e9144)
RESULTS:
-------------------
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r1 = $r0[$i0]]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
missingClasses -> [missingClasses = $r4]
l6 -> [l6 = l6 + 1]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 0]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$z0 -> [$z0 = 0]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
listener -> [listener = $r10]
$r14 -> [l2 = l1]
e -> [e = $r7]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
l7 -> [l7 = lengthof args]
$z0 -> [$z0 = 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
l6 -> [l6 = 0]
$r14 -> [l3 = $r3]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$z0 -> [$z0 = 0]
failure -> [failure = $r9]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
classes -> [classes = $r4]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r0]
$r14 -> [$r1 = l0]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
l8 -> [l8 = args]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r1 = null]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
each -> [each = l8[l6]]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l2]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
result -> [result = $r0]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4[$i0]]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r2 = l4]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (307901ed)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (70ca02e3)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (4377db9f)
RESULTS:
-------------------
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
this -> [this := @this: org.junit.runner.JUnitCore]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT return (1c3169e2)
RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Original call graph has 159898 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.16811E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.777094628 seconds, callgraph now has 159898 edges.
Updating reachable methods took 6.966E-6 seconds
Graph patched in 3.03183641 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 3.392623495 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
CFG changeset computation took 3.716056342 seconds
Removing 37 expired nodes...
Expired nodes removed in 4.443777548 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 0.063476639 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.061860902 seconds
Phase 2 took 8.433925825 seconds
Actually processed 3 of 62 expired edges in 14.982926516 seconds
Processing worklist for values...
Worklist processing done, 17097 edges processed.
IDE results updated in 144.765832239 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (6f94611d)
NEW RESULTS:
-------------------
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 1]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
args -> [args := @parameter1: java.lang.String[]]
$b0 -> [$b0 = 0]
result -> [result = $r0]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (4bdde705)
NEW RESULTS:
-------------------
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
each -> [each = arr$[i$]]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 1]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 0]
$r13 -> [l1 = $r4[$i1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 0]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r1 = null]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r2 = l4]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r6 -> [$r6 := @caughtexception]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
len$ -> [len$ = lengthof arr$]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [l1 = $r0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [l3 = $r3]
listener -> [listener = $r9]
each -> [each = (org.junit.runner.notification.Failure) $r13]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
arr$ -> [arr$ = args]
$r13 -> [$r1 = l0]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
classes -> [classes = $r4]
$z0 -> [$z0 = 0]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
e -> [e = $r6]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
failure -> [failure = $r8]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [l1 = $r2[$i1]]
result -> [result = $r0]
i$ -> [i$ = i$ + 1]
$z0 -> [$z0 = 1]
i$ -> [i$ = 0]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l2]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [l2 = l1]
$z0 -> [$z0 = 1]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r1 = null]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
i$ -> [$r0 = new java.util.AbstractList$Itr]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (307901ed)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (70ca02e3)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (4377db9f)
NEW RESULTS:
-------------------
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
GET RESULTS AT return (1c3169e2)
NEW RESULTS:
-------------------
args -> [args := @parameter0: java.lang.String[]]
$r0 -> [$r0 = new org.junit.internal.RealSystem]
Time elapsed: 754.90953726
Transforming TestRemoveLeakInFunction... 
Transforming DeleteInOutLoopTest... 
Transforming SimpleTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeak... 
Transforming TestRemoveNoLeakCall... 
Transforming TestRemoveLeakingCall... 
Transforming ExitTest... 
Transforming FuncTypeTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 12:18:30 CET 2013
Soot has run for 13 min. 19 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 12:18:30 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.876422289 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 665.005024469seconds.
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair result,[result = $r0]
Pair $b0,[$b0 = 0]
Pair args,[args := @parameter1: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (4308eab)
RESULTS:
-------------------
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
result -> [result = $r0]
$b0 -> [$b0 = 0]
args -> [args := @parameter1: java.lang.String[]]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
$b0 -> [$b0 = 1]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (198be09b)
RESULTS:
-------------------
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r1 = null]
$r14 -> [$r2 = l4]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
classes -> [classes = $r4]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
l7 -> [l7 = lengthof args]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
l8 -> [l8 = args]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [l3 = $r3]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
l6 -> [l6 = l6 + 1]
each -> [each = l8[l6]]
l6 -> [l6 = 0]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
listener -> [listener = $r10]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r3 = $r2[$i0]]
result -> [result = $r0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [l2 = l1]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 0]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
failure -> [failure = $r9]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r7 -> [$r7 := @caughtexception]
missingClasses -> [missingClasses = $r4]
$r14 -> [l1 = $r4[$i1]]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 1]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [l1 = $r0]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l2]
args -> [args := @parameter1: java.lang.String[]]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
e -> [e = $r7]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = l0]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r2[$i1]]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (6a9a6fbf)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (3880eef1)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (7cabffee)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT return (ab47b21)
RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Original call graph has 159898 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.16334E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.828515077 seconds, callgraph now has 159898 edges.
Updating reachable methods took 7.582E-6 seconds
Graph patched in 3.085135833 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 3.704764871 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
CFG changeset computation took 3.762334779 seconds
Removing 37 expired nodes...
Expired nodes removed in 4.477570529 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.066393787 seconds
Phase 2 took 10.128803145 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 8.817831875 seconds
Actually processed 3 of 62 expired edges in 27.49259046 seconds
Processing worklist for values...
Worklist processing done, 23119 edges processed.
IDE results updated in 145.955404646 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (4b9cb036)
NEW RESULTS:
-------------------
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
result -> [result = $r0]
$b0 -> [$b0 = 0]
$b0 -> [$b0 = 1]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
args -> [args := @parameter1: java.lang.String[]]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (2cbe712)
NEW RESULTS:
-------------------
$z0 -> [$z0 = 1]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r2 = l2]
each -> [each = arr$[i$]]
$r13 -> [l2 = l1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
i$ -> [i$ = i$ + 1]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r1 = $r0[l1]]
$r0 -> [l0 := @this: java.lang.StringBuilder]
classes -> [classes = $r4]
each -> [each = (org.junit.runner.notification.Failure) $r13]
len$ -> [len$ = lengthof arr$]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r1 = null]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r2 = l4]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = l0]
failure -> [failure = $r8]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r13 -> [l1 = $r2[$i1]]
e -> [e = $r6]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r6 -> [$r6 := @caughtexception]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
listener -> [listener = $r9]
i$ -> [i$ = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [l3 = $r3]
$r13 -> [$r5 = $r4[$i0]]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [l1 = $r0]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
result -> [result = $r0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [l1 := @parameter0: java.lang.Object]
arr$ -> [arr$ = args]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [l1 := @parameter0: java.lang.Object]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 0]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [l1 = $r4[$i1]]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (6a9a6fbf)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (3880eef1)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (7cabffee)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
GET RESULTS AT return (ab47b21)
NEW RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Time elapsed: 820.848101877
Transforming TestRemoveNoLeakCall... 
Transforming SimpleTest... 
Transforming DeleteInOutLoopTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeak... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeakingCall... 
Transforming ExitTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 12:32:54 CET 2013
Soot has run for 14 min. 24 sec.
newVersionJU_Propagate finished.
Starting newVersionJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Sun Mar 24 12:32:54 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 2.908716473 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 606.938231342seconds.
Pair $b0,[$b0 = 1]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
GET RESULTS AT interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) (6cea2eb5)
RESULTS:
-------------------
$b0 -> [$b0 = 1]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 0]
result -> [result = $r0]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter1: java.lang.String[]]
GET RESULTS AT if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() (1991af8)
RESULTS:
-------------------
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
each -> [each = l8[l6]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r1 = null]
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r7 -> [$r7 := @caughtexception]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = l4]
result -> [result = $r0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
listener -> [listener = $r10]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
l6 -> [l6 = l6 + 1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
l7 -> [l7 = lengthof args]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [l2 = l1]
$r14 -> [l3 = $r3]
$z0 -> [$z0 = 0]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0[l1]]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 0]
$r14 -> [l1 := @parameter0: java.lang.Object]
missingClasses -> [missingClasses = $r4]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l2]
$r14 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
l8 -> [l8 = args]
$r14 -> [l1 = $r0]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
l6 -> [l6 = 0]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r1 = l0]
$r14 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
failure -> [failure = $r9]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
e -> [e = $r7]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
each -> [each = (org.junit.runner.notification.Failure) $r14]
classes -> [classes = $r4]
$r14 -> [$r2 = $r1[$i1]]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (1d485136)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (41df50b3)
RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (28e77d9b)
RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r10]
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
GET RESULTS AT return (8ef8476)
RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Original call graph has 159898 edges
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: [Ljava/lang/Class<*>;
found type: [Ljava/lang/Class<*>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.33761E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.81927457 seconds, callgraph now has 159898 edges.
Updating reachable methods took 9.677E-6 seconds
Graph patched in 3.119364298 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 3.870102006 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1 -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8) -> $r9 = new org.junit.runner.notification.Failure
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e) -> failure = $r9
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)] -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = newarray (java.lang.annotation.Annotation)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6] -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)] -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure -> specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> goto [?= l6 = l6 + 1]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6) -> $r7 := @caughtexception
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ") -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0 -> goto [?= (branch)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9 -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0) -> return
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args -> l6 = 0
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if l6 < l7 goto each = l8[l6]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> l8 = args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ") -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()] -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1] -> l6 = l6 + 1
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0] -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception -> e = $r7
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args -> l7 = lengthof args
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args) -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>() -> goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 0 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r7 = newarray (java.lang.annotation.Annotation)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> $r8 = new org.junit.runner.notification.Failure
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> failure = $r8
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3) -> interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= return result]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<org.junit.runner.JUnitCore: void <init>()>() -> $z0 = virtualinvoke result.<org.junit.runner.Result: boolean wasSuccessful()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure) -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> staticinvoke <java.lang.System: void exit(int)>($b0)
new edge: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) $b0 = 1 -> return
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) virtualinvoke $r1.<org.junit.runner.notification.RunNotifier: void fireTestRunFinished(org.junit.runner.Result)>(result) -> virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= (branch)] -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> arr$ = args
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> len$ = lengthof arr$
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = 0
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> each = arr$[i$]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r9 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r6 := @caughtexception
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> e = $r6
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> listener = $r9
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= i$ = i$ + 1]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> $r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> i$ = i$ + 1
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) missingClasses = $r4 -> goto [?= (branch)]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> if $z0 == 0 goto return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = new java.lang.StringBuilder -> $r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception -> $r4 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = l6 + 1
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= l6 = l6 + 1]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l7 = lengthof args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = args
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 := @caughtexception
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= virtualinvoke this.<org.junit.runner.JUnitCore: void removeListener(org.junit.runner.notification.RunListener)>(listener)]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = newarray (java.lang.annotation.Annotation)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l6 = 0
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r9
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.runner.notification.Failure
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r7
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke system.<org.junit.internal.JUnitSystem: void exit(int)>($b0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r9
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) e = $r6
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) staticinvoke <java.lang.System: void exit(int)>($b0)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) arr$ = args
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r7 = newarray (java.lang.annotation.Annotation)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 == 0 goto return result
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class: ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) result = specialinvoke $r0.<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>(system, args)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if i$ >= len$ goto $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r8 = new org.junit.runner.notification.Failure
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit version ")
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) len$ = lengthof arr$
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r8.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) $r4 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r9.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) failure = $r8
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = i$ + 1
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r6 := @caughtexception
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r5)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r9 = new org.junit.internal.TextListener
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result run(org.junit.runner.Runner)>) goto [?= return result]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = arr$[i$]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r7)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= i$ = i$ + 1]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) i$ = 0
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: void runMainAndExit(org.junit.internal.JUnitSystem,java.lang.String[])>) goto [?= staticinvoke <java.lang.System: void exit(int)>($b0)]
CFG changeset computation took 3.75228094 seconds
Removing 37 expired nodes...
Expired nodes removed in 4.495350652 seconds.
Updating 13 new edges...
New edges updated
Deleting 49 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 10.29190918 seconds
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
java.lang.RuntimeException: Unit has no associated body: staticinvoke <java.lang.System: void exit(int)>(code)
Phase 2 took 0.060670868 seconds
Phase 2 took 0.064421232 seconds
Actually processed 3 of 62 expired edges in 14.584062051 seconds
Processing worklist for values...
Worklist processing done, 17098 edges processed.
IDE results updated in 128.483241018 seconds.
GET RESULTS AT staticinvoke <java.lang.System: void exit(int)>($b0) (10869a63)
NEW RESULTS:
-------------------
$b0 -> [$b0 = 1]
$r0 -> [$r0 = new org.junit.runner.JUnitCore]
@parameter1: java.lang.String[] -> [args := @parameter0: java.lang.String[]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$b0 -> [$b0 = 0]
result -> [result = $r0]
args -> [args := @parameter1: java.lang.String[]]
@parameter0: org.junit.internal.JUnitSystem -> [$r0 = new org.junit.internal.RealSystem]
GET RESULTS AT goto [?= $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] (6b245dc2)
NEW RESULTS:
-------------------
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$z0 -> [$z0 = 1]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r9 -> [$r9 = new org.junit.internal.TextListener]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0[l1]]
i$ -> [i$ = 0]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [l3 = $r3]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
arr$ -> [arr$ = args]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r8 -> [$r8 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
e -> [e = $r6]
this -> [this := @this: org.junit.runner.JUnitCore]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
result -> [result = $r0]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
each -> [each = arr$[i$]]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = l0]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r6 -> [$r6 := @caughtexception]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = l0]
$r13 -> [$r2 = l2]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [l1 = $r0]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [l2 = l1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
missingClasses -> [missingClasses = $r4]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
i$ -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r2 = l4]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
failure -> [failure = $r8]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
len$ -> [len$ = lengthof arr$]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
i$ -> [i$ = i$ + 1]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r7 -> [$r7 = newarray (java.lang.annotation.Annotation)[0]]
listener -> [listener = $r9]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [l1 = $r4[$i1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
classes -> [classes = $r4]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
GET RESULTS AT this := @this: org.junit.runner.JUnitCore (1d485136)
NEW RESULTS:
-------------------
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT listener := @parameter0: org.junit.runner.notification.RunListener (41df50b3)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT virtualinvoke $r0.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>(listener) (28e77d9b)
NEW RESULTS:
-------------------
this -> [this := @this: org.junit.runner.JUnitCore]
$r0 -> [$r0 = this.<org.junit.runner.JUnitCore: org.junit.runner.notification.RunNotifier fNotifier>]
listener -> [listener := @parameter0: org.junit.runner.notification.RunListener]
@parameter0: org.junit.runner.notification.RunListener -> [listener = $r9]
GET RESULTS AT return (8ef8476)
NEW RESULTS:
-------------------
$r0 -> [$r0 = new org.junit.internal.RealSystem]
args -> [args := @parameter0: java.lang.String[]]
Time elapsed: 745.571939424
Transforming TestRemoveLeak... 
Transforming ExitTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming FuncTypeTest... 
Transforming TestRemoveNoLeakCall... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming SimpleTest... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Sun Mar 24 12:46:05 CET 2013
Soot has run for 13 min. 10 sec.
newVersionJU_Propagate finished.
Test run was successful
