Starting removeAssignmentJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 26 17:16:24 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 4.586659089 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 674.085138849seconds.
Pair args,[args := @parameter1: java.lang.String[]]
Pair $b0,[$b0 = 1]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
-----------------------------
Old results
-----------------------------
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 1]
each -> [each = l8[l6]]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = null]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
failure -> [failure = $r9]
$r7 -> [$r7 := @caughtexception]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
listener -> [listener = $r10]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [l2 = l1]
$r14 -> [$r1 = null]
$r14 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [l1 = $r0]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [l3 = $r3]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
e -> [e = $r7]
$z0 -> [$z0 = 0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r3 -> [$r0 = new java.lang.String]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r1 = l0]
l6 -> [l6 = l6 + 1]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
result -> [result = $r0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l2]
$r14 -> [$r1 = l0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
classes -> [classes = $r4]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [l1 = $r2[$i1]]
l7 -> [l7 = lengthof args]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
l6 -> [l6 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
l8 -> [l8 = args]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 1]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r5 = $r4[$i0]]
-----------------------------
-----------------------------
Old runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Original call graph has 160948 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.34819E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 4.973963312 seconds, callgraph now has 160944 edges.
Updating reachable methods took 3.4847E-5 seconds
-----------------------------
New runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
listener = null
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r10 = newarray (java.lang.Class)[0]
$r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
$r12 = (java.lang.Class[]) $r11
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r13
$r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Graph patched in 5.514894235 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 3.159399501 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Removed method: org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem) (REMOVED)
Removed method: org.junit.internal.TextListener: void <init>(java.io.PrintStream) (REMOVED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> listener = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) specialinvoke this.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>($r0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) writer := @parameter0: java.io.PrintStream
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) $r0 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) system := @parameter0: org.junit.internal.JUnitSystem
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) return
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) specialinvoke this.<org.junit.runner.notification.RunListener: void <init>()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this.<org.junit.internal.TextListener: java.io.PrintStream fWriter> = writer
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) return
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
CFG changeset computation took 4.229931969 seconds
Removing 22 expired nodes...
Expired nodes removed in 4.777379003 seconds.
Updating 3 new edges...
New edges updated
Deleting 15 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 11.790747847 seconds
Actually processed 1 of 18 expired edges in 18.191607512 seconds
Processing worklist for values...
Worklist processing done, 14331 edges processed.
IDE results updated in 191.860741884 seconds.
-----------------------------
New results
-----------------------------
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
each -> [each = l8[l6]]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [l1 = $r0]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [l3 = $r3]
$r13 -> [l2 = l1]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
failure -> [failure = $r9]
$r7 -> [$r7 := @caughtexception]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = 0]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 1]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = null]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
each -> [each = (org.junit.runner.notification.Failure) $r13]
e -> [e = $r7]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r3 -> [$r0 = new java.lang.String]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r2 = l2]
$r13 -> [$r2 = $r1[$i1]]
l6 -> [l6 = l6 + 1]
result -> [result = $r0]
$r13 -> [$r1 = l0]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
listener -> [listener = null]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 1]
classes -> [classes = $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
l7 -> [l7 = lengthof args]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
l6 -> [l6 = 0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
l8 -> [l8 = args]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$z0 -> [$z0 = 1]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 1]
args -> [args := @parameter1: java.lang.String[]]
-----------------------------
Time elapsed: 879.804075601
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeak... 
Transforming TestRemoveLeakInFunction... 
Transforming FuncTypeTest... 
Transforming SimpleTest... 
Transforming TestRemoveNoLeakCall... 
Transforming org.junit.internal.TextListener... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 26 17:32:21 CET 2013
Soot has run for 15 min. 56 sec.
removeAssignmentJU_Propagate finished.
Starting removeAssignmentJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 26 17:32:21 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.131989632 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 618.758656797seconds.
Pair result,[result = $r0]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $b0,[$b0 = 0]
Pair $b0,[$b0 = 1]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
-----------------------------
Old results
-----------------------------
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
l6 -> [l6 = 0]
result -> [result = $r0]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
listener -> [listener = $r10]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
failure -> [failure = $r9]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r0]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
l8 -> [l8 = args]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r1 = l0]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
classes -> [classes = $r4]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r2 = l4]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
l6 -> [l6 = l6 + 1]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = l0]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [l3 = $r3]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r5 = $r4[$i0]]
$r7 -> [$r7 := @caughtexception]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
l7 -> [l7 = lengthof args]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 1]
$r14 -> [l2 = l1]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 0]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r2 = l2]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
each -> [each = l8[l6]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
e -> [e = $r7]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$z0 -> [$z0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
-----------------------------
-----------------------------
Old runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Original call graph has 160948 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.14766E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.834140108 seconds, callgraph now has 160944 edges.
Updating reachable methods took 7.337E-6 seconds
-----------------------------
New runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
listener = null
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r10 = newarray (java.lang.Class)[0]
$r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
$r12 = (java.lang.Class[]) $r11
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r13
$r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Graph patched in 3.138275255 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 54.409775277 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Removed method: org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem) (REMOVED)
Removed method: org.junit.internal.TextListener: void <init>(java.io.PrintStream) (REMOVED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> listener = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) writer := @parameter0: java.io.PrintStream
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) specialinvoke this.<org.junit.runner.notification.RunListener: void <init>()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) system := @parameter0: org.junit.internal.JUnitSystem
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this.<org.junit.internal.TextListener: java.io.PrintStream fWriter> = writer
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) return
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) return
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) $r0 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) specialinvoke this.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>($r0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
CFG changeset computation took 3.731881984 seconds
Removing 22 expired nodes...
Expired nodes removed in 2.746369622 seconds.
Updating 3 new edges...
New edges updated
Deleting 15 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 9.617442306 seconds
Actually processed 1 of 18 expired edges in 17.65183101 seconds
Processing worklist for values...
Worklist processing done, 14331 edges processed.
IDE results updated in 124.646096193 seconds.
-----------------------------
New results
-----------------------------
$z0 -> [$z0 = 1]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 1]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r0 -> [l0 := @this: java.lang.StringBuilder]
l6 -> [l6 = 0]
result -> [result = $r0]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
failure -> [failure = $r9]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [l1 = $r0]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [l3 = $r3]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 1]
l8 -> [l8 = args]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 0]
classes -> [classes = $r4]
$r13 -> [$r1 = l0]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r5 = $r4[$i0]]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
$r13 -> [l2 = l1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
l6 -> [l6 = l6 + 1]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
each -> [each = l8[l6]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r7 -> [$r7 := @caughtexception]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
l7 -> [l7 = lengthof args]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
listener -> [listener = null]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l2]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r2 = l4]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
e -> [e = $r7]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
-----------------------------
Time elapsed: 804.10523632
Transforming TestRemoveLeak... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming DeleteInOutLoopTest... 
Transforming FuncTypeTest... 
Transforming TestRemoveNoLeakCall... 
Transforming ExitTest... 
Transforming SimpleTest... 
Transforming TestRemoveLeakInFunction... 
Transforming org.junit.internal.TextListener... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 26 17:46:36 CET 2013
Soot has run for 14 min. 15 sec.
removeAssignmentJU_Propagate finished.
Starting removeAssignmentJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 26 17:46:36 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.201272354 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 636.136871402seconds.
Pair $b0,[$b0 = 1]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $b0,[$b0 = 0]
Pair result,[result = $r0]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair args,[args := @parameter1: java.lang.String[]]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
-----------------------------
Old results
-----------------------------
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
l8 -> [l8 = args]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
l7 -> [l7 = lengthof args]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [l1 = $r0]
$z0 -> [$z0 = 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
e -> [e = $r7]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
failure -> [failure = $r9]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r5 = $r4[$i0]]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r1 = l0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
result -> [result = $r0]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r2 = l4]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [l1 := @parameter0: java.lang.Object]
l8 -> [$r0 = new java.util.AbstractList$Itr]
l6 -> [l6 = l6 + 1]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$z0 -> [$z0 = 0]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [l2 = l1]
l6 -> [l6 = 0]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = l0]
this -> [this := @this: org.junit.runner.JUnitCore]
each -> [each = l8[l6]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [l3 = $r3]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
listener -> [listener = $r10]
classes -> [classes = $r4]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r2 = l2]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
-----------------------------
-----------------------------
Old runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Original call graph has 160948 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.11836E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.777643116 seconds, callgraph now has 160944 edges.
Updating reachable methods took 6.771E-6 seconds
-----------------------------
New runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
listener = null
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r10 = newarray (java.lang.Class)[0]
$r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
$r12 = (java.lang.Class[]) $r11
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r13
$r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Graph patched in 3.0466016 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 4.516325125 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Removed method: org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem) (REMOVED)
Removed method: org.junit.internal.TextListener: void <init>(java.io.PrintStream) (REMOVED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> listener = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) specialinvoke this.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>($r0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) system := @parameter0: org.junit.internal.JUnitSystem
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) specialinvoke this.<org.junit.runner.notification.RunListener: void <init>()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) $r0 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this.<org.junit.internal.TextListener: java.io.PrintStream fWriter> = writer
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) return
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) writer := @parameter0: java.io.PrintStream
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) return
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
CFG changeset computation took 4.104820897 seconds
Removing 22 expired nodes...
Expired nodes removed in 2.832202247 seconds.
Updating 3 new edges...
New edges updated
Deleting 15 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 9.441390792 seconds
Actually processed 1 of 18 expired edges in 14.065157869 seconds
Processing worklist for values...
Worklist processing done, 14331 edges processed.
IDE results updated in 118.939656845 seconds.
-----------------------------
New results
-----------------------------
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0[l1]]
l8 -> [l8 = args]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [l3 = $r3]
l7 -> [l7 = lengthof args]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r2 = l4]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r3 = $r2[$i0]]
$z0 -> [$z0 = 1]
listener -> [listener = null]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
e -> [e = $r7]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
failure -> [failure = $r9]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [l1 = $r0]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r7 -> [$r7 := @caughtexception]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 1]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
result -> [result = $r0]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [l1 := @parameter0: java.lang.Object]
l6 -> [l6 = l6 + 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
l6 -> [l6 = 0]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r2 = l2]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
$r13 -> [$r1 = l0]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
each -> [each = l8[l6]]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r1 = l0]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r2 = $r1[l1]]
classes -> [classes = $r4]
$z0 -> [$z0 = 0]
$r13 -> [l2 = l1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = null]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
-----------------------------
Time elapsed: 765.861030353
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveNoLeakCall... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeakingCall... 
Transforming SimpleTest... 
Transforming TestRemoveLeak... 
Transforming ExitTest... 
Transforming org.junit.internal.TextListener... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 26 18:00:17 CET 2013
Soot has run for 13 min. 40 sec.
removeAssignmentJU_Propagate finished.
Starting removeAssignmentJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 26 18:00:17 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.055808565 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 612.700067383seconds.
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
-----------------------------
Old results
-----------------------------
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l2]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [l1 := @parameter0: java.lang.Object]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [l1 = $r0]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [l2 = l1]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = $r4[$i0]]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
l8 -> [l8 = args]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 1]
$r14 -> [l3 = $r3]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 1]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
each -> [each = l8[l6]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 1]
classes -> [classes = $r4]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = l4]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = l0]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
l6 -> [l6 = l6 + 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [l1 = $r2[$i1]]
l6 -> [l6 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r1 = $r0[l1]]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
e -> [e = $r7]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
description -> [$r1 = new org.junit.runner.Description]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 0]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
failure -> [failure = $r9]
l7 -> [l7 = lengthof args]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 1]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
listener -> [listener = $r10]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$z0 -> [$z0 = 0]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 0]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r3 -> [$r0 = new java.lang.String]
result -> [result = $r0]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
-----------------------------
-----------------------------
Old runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Original call graph has 160948 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.15751E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 4.439525871 seconds, callgraph now has 160944 edges.
Updating reachable methods took 7.66E-6 seconds
-----------------------------
New runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
listener = null
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r10 = newarray (java.lang.Class)[0]
$r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
$r12 = (java.lang.Class[]) $r11
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r13
$r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Graph patched in 4.714839659 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 3.090071899 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Removed method: org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem) (REMOVED)
Removed method: org.junit.internal.TextListener: void <init>(java.io.PrintStream) (REMOVED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> listener = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) return
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) system := @parameter0: org.junit.internal.JUnitSystem
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) $r0 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) return
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) specialinvoke this.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>($r0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this.<org.junit.internal.TextListener: java.io.PrintStream fWriter> = writer
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) writer := @parameter0: java.io.PrintStream
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) specialinvoke this.<org.junit.runner.notification.RunListener: void <init>()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
CFG changeset computation took 3.825374737 seconds
Removing 22 expired nodes...
Expired nodes removed in 2.785242394 seconds.
Updating 3 new edges...
New edges updated
Deleting 15 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 12.423337509 seconds
Actually processed 1 of 18 expired edges in 16.236262726 seconds
Processing worklist for values...
Worklist processing done, 14331 edges processed.
IDE results updated in 136.785305165 seconds.
-----------------------------
New results
-----------------------------
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
l8 -> [l8 = args]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 0]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
classes -> [classes = $r4]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = l0]
l6 -> [l6 = l6 + 1]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
l6 -> [l6 = 0]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 0]
$r13 -> [l3 = $r3]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
listener -> [listener = null]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$z0 -> [$z0 = 1]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
args -> [args := @parameter1: java.lang.String[]]
e -> [e = $r7]
$r13 -> [$r1 = $r0[l1]]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
description -> [$r1 = new org.junit.runner.Description]
$r7 -> [$r7 := @caughtexception]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [l2 = l1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
failure -> [failure = $r9]
l7 -> [l7 = lengthof args]
this -> [this := @this: org.junit.runner.JUnitCore]
each -> [each = l8[l6]]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [$r1 = l0]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [l1 = $r0]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r2 = l4]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r3 -> [$r0 = new java.lang.String]
result -> [result = $r0]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 1]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
-----------------------------
Time elapsed: 760.361827758
Transforming SimpleTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming FuncTypeTest... 
Transforming ExitTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeak... 
Transforming TestRemoveNoLeakCall... 
Transforming DeleteAssignmentInLoopTest... 
Transforming org.junit.internal.TextListener... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 26 18:13:47 CET 2013
Soot has run for 13 min. 30 sec.
removeAssignmentJU_Propagate finished.
Starting removeAssignmentJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 26 18:13:47 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.170542171 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 665.019483846seconds.
Pair $b0,[$b0 = 1]
Pair result,[result = $r0]
Pair $b0,[$b0 = 0]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair args,[args := @parameter1: java.lang.String[]]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
-----------------------------
Old results
-----------------------------
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
l6 -> [l6 = 0]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l2]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r1 = l0]
listener -> [listener = $r10]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 0]
$r14 -> [l3 = $r3]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
each -> [each = (org.junit.runner.notification.Failure) $r14]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r1 = null]
l6 -> [l6 = l6 + 1]
$r14 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r7 -> [$r7 := @caughtexception]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
l7 -> [l7 = lengthof args]
$r14 -> [l2 = l1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
l8 -> [l8 = args]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
e -> [e = $r7]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r1 = null]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [l1 = $r0]
$z0 -> [$z0 = 1]
result -> [result = $r0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r1 = $r0[l1]]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
each -> [each = l8[l6]]
$z0 -> [$z0 = 0]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 0]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
classes -> [classes = $r4]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 1]
$r14 -> [l1 := @parameter0: java.lang.Object]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r2 = l4]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
failure -> [failure = $r9]
-----------------------------
-----------------------------
Old runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Original call graph has 160948 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.12899E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.771918232 seconds, callgraph now has 160944 edges.
Updating reachable methods took 6.778E-6 seconds
-----------------------------
New runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
listener = null
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r10 = newarray (java.lang.Class)[0]
$r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
$r12 = (java.lang.Class[]) $r11
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r13
$r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Graph patched in 3.072580095 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 5.011421753 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Removed method: org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem) (REMOVED)
Removed method: org.junit.internal.TextListener: void <init>(java.io.PrintStream) (REMOVED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> listener = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) $r0 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) specialinvoke this.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>($r0)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) specialinvoke this.<org.junit.runner.notification.RunListener: void <init>()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this.<org.junit.internal.TextListener: java.io.PrintStream fWriter> = writer
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) return
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) return
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) system := @parameter0: org.junit.internal.JUnitSystem
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) writer := @parameter0: java.io.PrintStream
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
CFG changeset computation took 3.87207746 seconds
Removing 22 expired nodes...
Expired nodes removed in 2.824620737 seconds.
Updating 3 new edges...
New edges updated
Deleting 15 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 9.008961198 seconds
Actually processed 1 of 18 expired edges in 13.405910464 seconds
Processing worklist for values...
Worklist processing done, 14331 edges processed.
IDE results updated in 139.531767378 seconds.
-----------------------------
New results
-----------------------------
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [l1 = $r0]
$z0 -> [$z0 = 1]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 0]
l6 -> [l6 = 0]
$r13 -> [l1 = $r4[$i1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r1 = null]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r1 = l0]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
l6 -> [l6 = l6 + 1]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r7 -> [$r7 := @caughtexception]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [l2 = l1]
$r13 -> [l3 = $r3]
l7 -> [l7 = lengthof args]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r1 = null]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
l8 -> [l8 = args]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
e -> [e = $r7]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
args -> [args := @parameter1: java.lang.String[]]
result -> [result = $r0]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 0]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
each -> [each = l8[l6]]
classes -> [classes = $r4]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [l1 := @parameter0: java.lang.Object]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r1 = $r0[$i0]]
listener -> [listener = null]
failure -> [failure = $r9]
-----------------------------
Time elapsed: 815.828494764
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveNoLeakCall... 
Transforming TestRemoveLeak... 
Transforming SimpleTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming FuncTypeTest... 
Transforming org.junit.internal.TextListener... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 26 18:28:15 CET 2013
Soot has run for 14 min. 27 sec.
removeAssignmentJU_Propagate finished.
Starting removeAssignmentJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 26 18:28:15 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.163193036 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 535.467493231seconds.
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair args,[args := @parameter1: java.lang.String[]]
Pair $b0,[$b0 = 1]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair result,[result = $r0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
-----------------------------
Old results
-----------------------------
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
l6 -> [l6 = 0]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r1 = l0]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
classes -> [classes = $r4]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
l6 -> [l6 = l6 + 1]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [l1 = $r0]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
each -> [each = l8[l6]]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
l7 -> [l7 = lengthof args]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r10 -> [$r10 = new org.junit.internal.TextListener]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [l2 = l1]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r4 -> [$r4 = new java.util.ArrayList]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [l1 = $r2[$i1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
args -> [args := @parameter1: java.lang.String[]]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
l8 -> [l8 = args]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l2]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
result -> [result = $r0]
$z0 -> [$z0 = 1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
listener -> [listener = $r10]
$r14 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 1]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
failure -> [failure = $r9]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
e -> [e = $r7]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [l3 = $r3]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r14 -> [$r2 = l4]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
-----------------------------
-----------------------------
Old runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Original call graph has 160948 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.12205E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.746859232 seconds, callgraph now has 160944 edges.
Updating reachable methods took 7.158E-6 seconds
-----------------------------
New runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
listener = null
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r10 = newarray (java.lang.Class)[0]
$r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
$r12 = (java.lang.Class[]) $r11
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r13
$r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Graph patched in 3.028132839 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 3.068373684 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Removed method: org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem) (REMOVED)
Removed method: org.junit.internal.TextListener: void <init>(java.io.PrintStream) (REMOVED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> listener = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this.<org.junit.internal.TextListener: java.io.PrintStream fWriter> = writer
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) specialinvoke this.<org.junit.runner.notification.RunListener: void <init>()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) system := @parameter0: org.junit.internal.JUnitSystem
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) return
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) specialinvoke this.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>($r0)
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) $r0 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) writer := @parameter0: java.io.PrintStream
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) return
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
CFG changeset computation took 3.848767221 seconds
Removing 22 expired nodes...
Expired nodes removed in 3.542064725 seconds.
Updating 3 new edges...
New edges updated
Deleting 15 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 5.40111562 seconds
Actually processed 1 of 18 expired edges in 9.854459047 seconds
Processing worklist for values...
Worklist processing done, 14331 edges processed.
IDE results updated in 128.647988049 seconds.
-----------------------------
New results
-----------------------------
$z0 -> [$z0 = 0]
$r13 -> [$r1 = l0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
each -> [each = l8[l6]]
$r13 -> [l1 = $r4[$i1]]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
l6 -> [l6 = 0]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
description -> [$r1 = new org.junit.runner.Description]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
classes -> [classes = $r4]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r5 = $r4[$i0]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
l6 -> [l6 = l6 + 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r7 -> [$r7 := @caughtexception]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
l7 -> [l7 = lengthof args]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r1 = l0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = null]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$z0 -> [$z0 = 0]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r13 -> [l1 = $r0]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r3 = $r2[$i0]]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [l2 = l1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [l1 := @parameter0: java.lang.Object]
l8 -> [l8 = args]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
listener -> [listener = null]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4]
$r13 -> [$r2 = l2]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
result -> [result = $r0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = $r1[$i1]]
failure -> [failure = $r9]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
e -> [e = $r7]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [l3 = $r3]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0[$i0]]
-----------------------------
Time elapsed: 673.395108092
Transforming DeleteInOutLoopTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming FuncTypeTest... 
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming TestRemoveNoLeakCall... 
Transforming SimpleTest... 
Transforming TestRemoveLeakInFunction... 
Transforming org.junit.internal.TextListener... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 26 18:40:21 CET 2013
Soot has run for 12 min. 5 sec.
removeAssignmentJU_Propagate finished.
Starting removeAssignmentJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 26 18:40:21 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.037167067 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 532.169078686seconds.
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair result,[result = $r0]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair $b0,[$b0 = 0]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
-----------------------------
Old results
-----------------------------
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l2 = l1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
e -> [e = $r7]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
l6 -> [l6 = l6 + 1]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
classes -> [classes = $r4]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
l7 -> [l7 = lengthof args]
$r14 -> [l1 = $r2[$i1]]
l6 -> [l6 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r14 -> [l3 = $r3]
$r14 -> [$r1 = l0]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r1 = l0]
$z0 -> [$z0 = 1]
missingClasses -> [missingClasses = $r4]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
l8 -> [l8 = args]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r1 = $r0[l1]]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [$r3 = $r2[$i0]]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r2 = $r1[$i1]]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
failure -> [failure = $r9]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
result -> [result = $r0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r2 = l2]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r2 = l4]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
each -> [each = l8[l6]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r1 = $r0[l1]]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
listener -> [listener = $r10]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [l1 := @parameter0: java.lang.Object]
-----------------------------
-----------------------------
Old runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Original call graph has 160948 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.18603E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.918308569 seconds, callgraph now has 160944 edges.
Updating reachable methods took 7.35E-6 seconds
-----------------------------
New runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
listener = null
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r10 = newarray (java.lang.Class)[0]
$r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
$r12 = (java.lang.Class[]) $r11
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r13
$r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Graph patched in 3.195024537 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 4.473115239 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Removed method: org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem) (REMOVED)
Removed method: org.junit.internal.TextListener: void <init>(java.io.PrintStream) (REMOVED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> listener = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) specialinvoke this.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>($r0)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this.<org.junit.internal.TextListener: java.io.PrintStream fWriter> = writer
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) system := @parameter0: org.junit.internal.JUnitSystem
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) return
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) writer := @parameter0: java.io.PrintStream
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) $r0 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) specialinvoke this.<org.junit.runner.notification.RunListener: void <init>()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) return
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
CFG changeset computation took 3.870059514 seconds
Removing 22 expired nodes...
Expired nodes removed in 2.800935758 seconds.
Updating 3 new edges...
New edges updated
Deleting 15 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 7.187283368 seconds
Actually processed 1 of 18 expired edges in 11.797622222 seconds
Processing worklist for values...
Worklist processing done, 14331 edges processed.
IDE results updated in 186.182421902 seconds.
-----------------------------
New results
-----------------------------
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = null]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [l1 = $r0]
e -> [e = $r7]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
l6 -> [l6 = l6 + 1]
$z0 -> [$z0 = 0]
classes -> [classes = $r4]
$r13 -> [$r1 = $r0[$i0]]
l7 -> [l7 = lengthof args]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
each -> [each = l8[l6]]
l6 -> [l6 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = l0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
args -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [l1 = $r2[$i1]]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 1]
l8 -> [l8 = args]
$r7 -> [$r7 := @caughtexception]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [l2 = l1]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r13 -> [$r2 = l2]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
failure -> [failure = $r9]
$z0 -> [$z0 = 1]
listener -> [listener = null]
$r13 -> [$r1 = $r0[l1]]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
result -> [result = $r0]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r1 = null]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = l0]
$r13 -> [l3 = $r3]
$r13 -> [l1 = $r4[$i1]]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
-----------------------------
Time elapsed: 729.078371887
Transforming SimpleTest... 
Transforming FuncTypeTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming DeleteInOutLoopTest... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveNoLeakCall... 
Transforming TestRemoveLeak... 
Transforming TestRemoveLeakingCall... 
Transforming org.junit.internal.TextListener... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 26 18:53:22 CET 2013
Soot has run for 13 min. 1 sec.
removeAssignmentJU_Propagate finished.
Starting removeAssignmentJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 26 18:53:22 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.609997898 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935409 edges propagated.
Solver done in 558.317990921seconds.
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair result,[result = $r0]
Pair args,[args := @parameter1: java.lang.String[]]
Pair $b0,[$b0 = 0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
-----------------------------
Old results
-----------------------------
$r7 -> [$r7 := @caughtexception]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r2 = l4]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 1]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 1]
$r14 -> [l1 = $r0]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
each -> [each = l8[l6]]
$r14 -> [l1 = $r2[$i1]]
missingClasses -> [missingClasses = $r4]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 0]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
failure -> [failure = $r9]
$z0 -> [$z0 = 1]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r3 = $r2[$i0]]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r1 = l0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 0]
l6 -> [l6 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [l1 = $r4[$i1]]
l7 -> [l7 = lengthof args]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r1 = null]
l6 -> [l6 = l6 + 1]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [l3 = $r3]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
description -> [$r1 = new org.junit.runner.Description]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
listener -> [listener = $r10]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
e -> [e = $r7]
$r14 -> [l2 = l1]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r4 -> [$r4 = new java.util.ArrayList]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [$r2 = l2]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
l8 -> [l8 = args]
this -> [this := @this: org.junit.runner.JUnitCore]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r1 = $r0[$i0]]
classes -> [classes = $r4]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
args -> [args := @parameter1: java.lang.String[]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
result -> [result = $r0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
-----------------------------
-----------------------------
Old runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Original call graph has 160948 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.13971E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.792556633 seconds, callgraph now has 160944 edges.
Updating reachable methods took 6.767E-6 seconds
-----------------------------
New runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
listener = null
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r10 = newarray (java.lang.Class)[0]
$r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
$r12 = (java.lang.Class[]) $r11
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r13
$r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Graph patched in 3.06026331 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 3.100821408 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Removed method: org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem) (REMOVED)
Removed method: org.junit.internal.TextListener: void <init>(java.io.PrintStream) (REMOVED)
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> listener = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this.<org.junit.internal.TextListener: java.io.PrintStream fWriter> = writer
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) specialinvoke this.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>($r0)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) writer := @parameter0: java.io.PrintStream
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) return
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) $r0 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) specialinvoke this.<org.junit.runner.notification.RunListener: void <init>()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) system := @parameter0: org.junit.internal.JUnitSystem
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) return
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
CFG changeset computation took 3.855089233 seconds
Removing 22 expired nodes...
Expired nodes removed in 2.830656546 seconds.
Updating 3 new edges...
New edges updated
Deleting 15 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 11.479946953 seconds
Actually processed 1 of 18 expired edges in 20.034872789 seconds
Processing worklist for values...
Worklist processing done, 14331 edges processed.
IDE results updated in 158.211718445 seconds.
-----------------------------
New results
-----------------------------
$r7 -> [$r7 := @caughtexception]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[$i0]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r2 = $r1[$i1]]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$r13 -> [$r1 = $r0[l1]]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [l2 = l1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
each -> [each = l8[l6]]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
failure -> [failure = $r9]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
l6 -> [l6 = 0]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [l3 = $r3]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [$r2 = l4]
l7 -> [l7 = lengthof args]
l6 -> [l6 = l6 + 1]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
description -> [$r1 = new org.junit.runner.Description]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
e -> [e = $r7]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r1 = l0]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
l8 -> [l8 = args]
this -> [this := @this: org.junit.runner.JUnitCore]
$r13 -> [l1 = $r0]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
classes -> [classes = $r4]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
args -> [args := @parameter1: java.lang.String[]]
result -> [result = $r0]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
listener -> [listener = null]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
-----------------------------
Time elapsed: 726.320750669
Transforming DeleteAssignmentInLoopTest... 
Transforming ExitTest... 
Transforming TestRemoveLeak... 
Transforming TestRemoveLeakInFunction... 
Transforming SimpleTest... 
Transforming DeleteInOutLoopTest... 
Transforming FuncTypeTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveNoLeakCall... 
Transforming org.junit.internal.TextListener... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 26 19:06:14 CET 2013
Soot has run for 12 min. 51 sec.
removeAssignmentJU_Propagate finished.
Starting removeAssignmentJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 26 19:06:14 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.038769427 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935419 edges propagated.
Solver done in 620.104901595seconds.
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $b0,[$b0 = 0]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
-----------------------------
Old results
-----------------------------
$r14 -> [$r2 = $r1[$i1]]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
args -> [args := @parameter1: java.lang.String[]]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$z0 -> [$z0 = 0]
$r14 -> [$r5 = $r4[$i0]]
each -> [each = (org.junit.runner.notification.Failure) $r14]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
l6 -> [l6 = 0]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r14 -> [l3 = $r3]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 0]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [$r1 = null]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r4 -> [$r4 = new java.util.ArrayList]
l8 -> [l8 = args]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r7 -> [$r7 := @caughtexception]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 0]
e -> [e = $r7]
$z0 -> [$z0 = 0]
$r14 -> [$r2 = $r1[l1]]
$z0 -> [$z0 = 1]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
each -> [each = l8[l6]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r14 -> [l1 = $r0]
$r14 -> [$r2 = l4]
$r3 -> [$r0 = new java.lang.String]
$r14 -> [$r1 = l0]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
classes -> [classes = $r4]
l7 -> [l7 = lengthof args]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
result -> [result = $r0]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [l1 = $r4[$i1]]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
l6 -> [l6 = l6 + 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
failure -> [failure = $r9]
$r14 -> [$r2 = l2]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r14 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
description -> [$r1 = new org.junit.runner.Description]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$r14 -> [l2 = l1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 1]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 1]
listener -> [listener = $r10]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
-----------------------------
-----------------------------
Old runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Original call graph has 160948 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.13703E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.821791658 seconds, callgraph now has 160944 edges.
Updating reachable methods took 6.845E-6 seconds
-----------------------------
New runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
listener = null
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r10 = newarray (java.lang.Class)[0]
$r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
$r12 = (java.lang.Class[]) $r11
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r13
$r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Graph patched in 3.091915488 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 5.013266391 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Removed method: org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem) (REMOVED)
Removed method: org.junit.internal.TextListener: void <init>(java.io.PrintStream) (REMOVED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> listener = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this.<org.junit.internal.TextListener: java.io.PrintStream fWriter> = writer
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) system := @parameter0: org.junit.internal.JUnitSystem
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) return
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) specialinvoke this.<org.junit.runner.notification.RunListener: void <init>()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) return
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) writer := @parameter0: java.io.PrintStream
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) specialinvoke this.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>($r0)
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) $r0 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
CFG changeset computation took 3.839728643 seconds
Removing 22 expired nodes...
Expired nodes removed in 2.821000267 seconds.
Updating 3 new edges...
New edges updated
Deleting 15 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 8.590792019 seconds
Actually processed 1 of 18 expired edges in 13.744453729 seconds
Processing worklist for values...
Worklist processing done, 14331 edges processed.
IDE results updated in 198.947790442 seconds.
-----------------------------
New results
-----------------------------
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
this -> [this := @this: org.junit.runner.JUnitCore]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r13 -> [$r1 = null]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r2 = l2]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [$r1 = l0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 0]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$r13 -> [l3 = $r3]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
l6 -> [l6 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r1 = $r0[$i0]]
$z0 -> [$z0 = 0]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4[$i0]]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r4 -> [$r4 = new java.util.ArrayList]
l8 -> [l8 = args]
$z0 -> [$z0 = 0]
$r13 -> [l1 = $r0]
missingClasses -> [missingClasses = $r4]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r7 -> [$r7 := @caughtexception]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 0]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$z0 -> [$z0 = 0]
e -> [e = $r7]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$z0 -> [$z0 = 1]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
listener -> [listener = null]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r3 -> [$r0 = new java.lang.String]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
classes -> [classes = $r4]
l7 -> [l7 = lengthof args]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
result -> [result = $r0]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$r13 -> [$r2 = $r1[$i1]]
l6 -> [l6 = l6 + 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$z0 -> [$z0 = 1]
failure -> [failure = $r9]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$z0 -> [$z0 = 0]
$r13 -> [l2 = l1]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r3 = $r2[$i0]]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$z0 -> [$z0 = 1]
$r13 -> [l1 = $r4[$i1]]
each -> [each = l8[l6]]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4]
-----------------------------
Time elapsed: 830.220267349
Transforming TestRemoveNoLeakCall... 
Transforming DeleteInOutLoopTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeak... 
Transforming FuncTypeTest... 
Transforming ExitTest... 
Transforming TestRemoveLeakingCall... 
Transforming SimpleTest... 
Transforming TestRemoveLeakInFunction... 
Transforming org.junit.internal.TextListener... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 26 19:20:50 CET 2013
Soot has run for 14 min. 36 sec.
removeAssignmentJU_Propagate finished.
Starting removeAssignmentJU_Propagate...
Soot classpath: /home/sarzt/soot-ifds/test/junit-4.10.jar:/home/sarzt/soot-ifds/hamcrest-core-1.3.jar:/home/sarzt/soot-ifds/bin:/usr/lib/jvm/java-6-sun/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun/jre/lib/jce.jar:C:\Program Files\Java\jre7\lib\rt.jar:C:\Program Files\Java\jre7\lib\jce.jar
Soot started on Tue Mar 26 19:20:50 CET 2013
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: TT;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: TT;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Comparator<Lorg/junit/runner/Description;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/Runner;>;
found type: Lorg/hamcrest/internal/SelfDescribingValue<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/util/List<Lorg/junit/runners/model/RunnerBuilder;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: TT;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Ljava/util/Iterator<Lorg/junit/runner/notification/RunListener;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/util/ArrayList<Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<+Lorg/junit/runner/Runner;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: TT;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/util/List<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Class<*>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Ljava/lang/Iterable<Lorg/junit/rules/TestRule;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/ArrayList<Ljava/lang/Class<*>;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Lorg/hamcrest/internal/SelfDescribingValueIterator<TT;>;
found type: Ljava/util/Iterator<TT;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Iterator<+Lorg/hamcrest/SelfDescribing;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/List<TT;>;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<Ljunit/framework/TestListener;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Ljava/lang/Class<TT;>;
found type: Ljava/util/List<TT;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Lorg/junit/runners/ParentRunner<TT;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<TT;>;
found type: TT;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: TT;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Lorg/junit/runners/model/FrameworkMember<TT;>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/util/List<Ljava/lang/String;>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/reflect/Constructor<*>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Lorg/junit/runners/model/FrameworkField;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
found type: Ljava/util/List<Ljava/lang/Throwable;>;
Running IFDS on initial CFG...
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG created in 3.12136922 seconds.
Running solver...
IDE solver started.
Running with 12 threads
IDE solver done, 5935420 edges propagated.
Solver done in 545.937400181seconds.
Pair $b0,[$b0 = 0]
Pair result,[result = $r0]
Pair @parameter0: org.junit.internal.JUnitSystem,[$r0 = new org.junit.internal.RealSystem]
Pair @parameter1: java.lang.String[],[args := @parameter0: java.lang.String[]]
Pair system,[system := @parameter0: org.junit.internal.JUnitSystem]
Pair $b0,[$b0 = 1]
Pair $r0,[$r0 = new org.junit.runner.JUnitCore]
-----------------------------
Old results
-----------------------------
$z0 -> [$z0 = 1]
each -> [each = (org.junit.runner.notification.Failure) $r14]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
each -> [each = l8[l6]]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$r14 -> [l1 = $r0]
$r14 -> [$r2 = l4]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$r14 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r14 -> [l1 = $r4[$i1]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [l1 := @parameter0: java.lang.Object]
missingClasses -> [missingClasses = $r4]
$r14 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
classes -> [classes = $r4]
$r14 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r12 -> [$r0 = (java.lang.Object[]) $r0]
$z0 -> [$z0 = 0]
$r11 -> [$r11 = newarray (java.lang.Class)[0]]
$z0 -> [$z0 = 1]
$r14 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r14 -> [$r3 = $r2[$i0]]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$r14 -> [$r1 = $r0[l1]]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$r14 -> [l1 = $r2[$i1]]
$r14 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r2 = (java.lang.Runnable) $r1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
$r14 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
this -> [this := @this: org.junit.runner.JUnitCore]
l7 -> [l7 = lengthof args]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r14 -> [$r2 = l2]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 1]
listener -> [listener = $r10]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = $r4[$i0]]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r14 -> [$r1 = null]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = l0]
$r14 -> [$r1 = $r0[l1]]
$r14 -> [$r0 = (java.security.Provider$Service) $r2]
$z0 -> [$z0 = 1]
$r7 -> [$r7 := @caughtexception]
$r14 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
e -> [e = $r7]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r14 -> [$r2 = $r1[l1]]
$r14 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
result -> [result = $r0]
args -> [args := @parameter1: java.lang.String[]]
$z0 -> [$z0 = 1]
$r14 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$z0 -> [$z0 = 1]
$r14 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
l6 -> [l6 = 0]
$r13 -> [$r13 = (java.lang.Class[]) $r12]
$r14 -> [$r2 = $r1[$i1]]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
l8 -> [l8 = args]
$r14 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$r14 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r14 -> [l1 := @parameter0: java.lang.Object]
$r14 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$r14 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$r14 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
$r14 -> [$r1 = null]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r14 -> [l2 = l1]
$r14 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r14 -> [l3 = $r3]
$r12 -> [l1 := @parameter0: java.lang.Object[]]
$r14 -> [l3 = (java.nio.charset.Charset) $r2]
$r4 -> [$r4 = new java.util.ArrayList]
$r14 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
l6 -> [l6 = l6 + 1]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r14 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r14 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r14 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r14 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$r14 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$r14 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$r14 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r14 -> [$r1 = $r0[$i0]]
$r14 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r10 -> [$r10 = new org.junit.internal.TextListener]
$r14 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
failure -> [failure = $r9]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r14 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r3 -> [$r0 = new java.lang.String]
description -> [$r1 = new org.junit.runner.Description]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 0]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$r14 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$z0 -> [$z0 = 1]
$r15 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
-----------------------------
-----------------------------
Old runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
$r10 = new org.junit.internal.TextListener
specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
listener = $r10
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r11 = newarray (java.lang.Class)[0]
$r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
$r13 = (java.lang.Class[]) $r12
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r14
$r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Original call graph has 160948 edges
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
found type: Ljava/util/List<Ljava/lang/Class<*>;>;
found type: Ljava/util/List<Lorg/junit/runner/notification/Failure;>;
Old main class: org.junit.runner.JUnitCore - new: org.junit.runner.JUnitCore
Updating entry points took 1.14543E-4 seconds
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Updating callgraph took 2.93898711 seconds, callgraph now has 160944 edges.
Updating reachable methods took 7.058E-6 seconds
-----------------------------
New runMain() function
-----------------------------
this := @this: org.junit.runner.JUnitCore
system := @parameter0: org.junit.internal.JUnitSystem
args := @parameter1: java.lang.String[]
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("JUnit version ")
$r2 = staticinvoke <junit.runner.Version: java.lang.String id()>()
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
classes = $r4
$r4 = new java.util.ArrayList
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
missingClasses = $r4
l8 = args
l7 = lengthof args
l6 = 0
goto [?= (branch)]
each = l8[l6]
$r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(each)
interfaceinvoke classes.<java.util.List: boolean add(java.lang.Object)>($r6)
goto [?= l6 = l6 + 1]
$r7 := @caughtexception
e = $r7
$r1 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
$r0 = new java.lang.StringBuilder
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find class: ")
$r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(each)
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)
$r8 = newarray (java.lang.annotation.Annotation)[0]
description = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.annotation.Annotation[])>(each, $r8)
$r9 = new org.junit.runner.notification.Failure
specialinvoke $r9.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(description, e)
failure = $r9
interfaceinvoke missingClasses.<java.util.List: boolean add(java.lang.Object)>(failure)
l6 = l6 + 1
if l6 < l7 goto each = l8[l6]
listener = null
virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
$r10 = newarray (java.lang.Class)[0]
$r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
$r12 = (java.lang.Class[]) $r11
result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
goto [?= $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()]
$r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
each = (org.junit.runner.notification.Failure) $r13
$r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
$z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
return result
-----------------------------
Graph patched in 3.205038965 seconds.
Obtaining call graph...
Computing reachable methods...
Collecting bodies for reachable methods...
Interprocedural CFG created.
Building scene diff information...
Scene diff information created.
ICFG updated in 5.53811109 seconds.
Performing IDE update...
Running with 12 threads
Computing code diff...
Incremental build done.
Changed method: org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[]) (CHANGED)
Removed method: org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem) (REMOVED)
Removed method: org.junit.internal.TextListener: void <init>(java.io.PrintStream) (REMOVED)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0] -> $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system) -> listener = $r10
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = newarray (java.lang.Class)[0]
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> return result
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>() -> interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11) -> $r13 = (java.lang.Class[]) $r12
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10 -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each) -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() -> each = (org.junit.runner.notification.Failure) $r14
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener -> specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12 -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14 -> $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> $r10 = new org.junit.internal.TextListener
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r10 = newarray (java.lang.Class)[0]
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> $r12 = (java.lang.Class[]) $r11
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener) -> l8 = interfaceinvoke missingClasses.<java.util.List: java.util.Iterator iterator()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> return result
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> each = (org.junit.runner.notification.Failure) $r13
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>() -> $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>()
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> listener = null
new edge: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if l6 < l7 goto each = l8[l6] -> virtualinvoke this.<org.junit.runner.JUnitCore: void addListener(org.junit.runner.notification.RunListener)>(listener)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(each)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) specialinvoke this.<org.junit.runner.notification.RunListener: void <init>()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = new org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r15 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r14
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = $r10
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) $r0 = interfaceinvoke system.<org.junit.internal.JUnitSystem: java.io.PrintStream out()>()
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) writer := @parameter0: java.io.PrintStream
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) specialinvoke this.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>($r0)
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) return
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = newarray (java.lang.Class)[0]
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = (java.lang.Class[]) $r12
expired node: (<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>) system := @parameter0: org.junit.internal.JUnitSystem
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this := @this: org.junit.internal.TextListener
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r13)
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) specialinvoke $r10.<org.junit.internal.TextListener: void <init>(org.junit.internal.JUnitSystem)>(system)
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) this.<org.junit.internal.TextListener: java.io.PrintStream fWriter> = writer
expired node: (<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>) return
expired node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r14 = virtualinvoke result.<org.junit.runner.Result: java.util.List getFailures()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) if $z0 != 0 goto $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(each)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) listener = null
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r12 = (java.lang.Class[]) $r11
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>()
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) each = (org.junit.runner.notification.Failure) $r13
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) result = virtualinvoke this.<org.junit.runner.JUnitCore: org.junit.runner.Result run(java.lang.Class[])>($r12)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r11 = interfaceinvoke classes.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
new node: (<org.junit.runner.JUnitCore: org.junit.runner.Result runMain(org.junit.internal.JUnitSystem,java.lang.String[])>) $r10 = newarray (java.lang.Class)[0]
CFG changeset computation took 3.827379756 seconds
Removing 22 expired nodes...
Expired nodes removed in 2.747275561 seconds.
Updating 3 new edges...
New edges updated
Deleting 15 expired edges...
Expired edges deleted.
Processing worklist for edges...
Phase 2 took 7.417982452 seconds
Actually processed 1 of 18 expired edges in 15.833538493 seconds
Processing worklist for values...
Worklist processing done, 14331 edges processed.
IDE results updated in 160.784244772 seconds.
-----------------------------
New results
-----------------------------
$r13 -> [$r3 = l0.<java.util.Collections$CopiesList: java.lang.Object element>]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r1 = $r0[l1]]
system -> [system := @parameter0: org.junit.internal.JUnitSystem]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry]
$z0 -> [$z0 = 1]
@parameter1: java.lang.String[] -> [args := @parameter1: java.lang.String[]]
listener -> [listener = null]
$r13 -> [$r0 = new sun.util.PreHashedMap$2$1$1]
$r11 -> [l1 := @parameter0: java.lang.Object[]]
each -> [each = l8[l6]]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
missingClasses -> [missingClasses = $r4]
$r13 -> [$r0 = l0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>]
classes -> [classes = $r4]
$r13 -> [$r2 = l4]
$r13 -> [$r2 = <sun.security.jca.ProviderList: java.security.Provider EMPTY_PROVIDER>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r13 -> [l3 = $r3]
$r13 -> [l1 = $r2[$i1]]
$r13 -> [l1 = $r4[$i1]]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.nio.charset.Charset$1: java.lang.Object next>]
$r13 -> [$r0 = l0.<sun.misc.SoftCache$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.lang.ProcessEnvironment$ExternalData: java.lang.String str>]
$z0 -> [$z0 = 0]
$r13 -> [l1 = l0.<sun.util.PreHashedMap$1$1: java.lang.String cur>]
$r13 -> [l1 = l0.<java.util.HashMap$HashIterator: java.util.HashMap$Entry next>]
$r13 -> [$r1 = l0]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = l0.<java.util.HashMap$Entry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = null]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [$r6 = l0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>]
$r13 -> [$r5 = $r4[$i0]]
$r8 -> [$r8 = newarray (java.lang.annotation.Annotation)[0]]
$z0 -> [$z0 = 1]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r2 = $r1[l1]]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object value>]
$r13 -> [l1 = l0.<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry next>]
$r13 -> [l0 := @this: java.util.IdentityHashMap$EntryIterator]
$r9 -> [$r9 = new org.junit.runner.notification.Failure]
this -> [this := @this: org.junit.runner.JUnitCore]
l7 -> [l7 = lengthof args]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object key>]
$r13 -> [l1 = l0.<sun.misc.SoftCache$EntrySet$1: sun.misc.SoftCache$Entry next>]
$r13 -> [$r1 = $r0.<java.util.HashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry]
$r13 -> [$r2 = l2]
$r13 -> [l1 := @parameter0: java.lang.Object]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [$r0 = l0.<java.util.Collections$SingletonSet: java.lang.Object element>]
$r13 -> [$r5 = (java.util.concurrent.Delayed) $r4]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 1]
$r7 -> [$r7 := @caughtexception]
$r13 -> [l1 = $r0]
e -> [e = $r7]
args -> [args := @parameter1: java.lang.String[]]
result -> [result = $r0]
$r13 -> [$r5 = l0.<java.util.PriorityQueue$Itr: java.lang.Object lastRetElt>]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r2 = $r1[$i1]]
$z0 -> [$z0 = 1]
$r13 -> [l2 = l1]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$r0 -> [l0 := @this: java.lang.StringBuilder]
$r14 -> [$r0 = this.<org.junit.runner.Result: java.util.List fFailures>]
$z0 -> [$z0 = 1]
l6 -> [l6 = 0]
$r13 -> [l1 := @parameter0: java.lang.Object]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Variable]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleEntry: java.lang.Object value>]
$r12 -> [$r12 = (java.lang.Class[]) $r11]
$r13 -> [$r3 = $r2[$i0]]
l8 -> [l8 = args]
$r1 -> [$r0 = <java.lang.System: java.io.PrintStream out>]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.LinkedHashMap$Entry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute key>]
$r13 -> [$r0 = l0.<java.util.Hashtable$Entry: java.lang.Object value>]
$r13 -> [$r1 = $r0[l1]]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>]
$z0 -> [$z0 = 0]
$r13 -> [$r2 = (java.lang.Runnable) $r1]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object key>]
$r13 -> [$r3 = l0.<java.util.Collections$SingletonList: java.lang.Object element>]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry]
$r13 -> [$r0 = l0.<java.text.AttributeEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0[$i0]]
$r10 -> [$r10 = newarray (java.lang.Class)[0]]
each -> [each = (org.junit.runner.notification.Failure) $r13]
$z0 -> [$z0 = 0]
$z0 -> [$z0 = 1]
$r11 -> [$r0 = (java.lang.Object[]) $r0]
$r13 -> [$r1 = l0]
$r13 -> [$r1 = null]
$r13 -> [$r0 = l0.<java.util.TreeMap$Entry: java.lang.Object key>]
$r4 -> [$r4 = new java.util.ArrayList]
$r13 -> [$r0 = l0.<java.util.WeakHashMap$Entry: java.lang.Object value>]
l6 -> [l6 = l6 + 1]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$StringEntry]
$r13 -> [$r1 = $r0.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>]
$r13 -> [$r0 = l0.<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object value>]
$r13 -> [$r1 = $r0.<java.util.LinkedList$Entry: java.lang.Object element>]
l8 -> [$r0 = new java.util.AbstractList$Itr]
$r13 -> [$r0 = new org.hamcrest.internal.SelfDescribingValue]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
$z0 -> [$z0 = 0]
$r13 -> [l3 = (java.nio.charset.Charset) $r2]
$r13 -> [l1 = l0.<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry next>]
failure -> [failure = $r9]
$z0 -> [$z0 = 1]
$r13 -> [$r0 = l0.<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service firstService>]
$z0 -> [$z0 = 0]
$r13 -> [$r0 = new java.lang.ProcessEnvironment$Value]
$r13 -> [$r0 = (java.security.Provider$Service) $r2]
description -> [$r1 = new org.junit.runner.Description]
$r3 -> [$r0 = new java.lang.String]
$z0 -> [$z0 = l0.<java.util.Collections$SingletonSet$1: boolean hasNext>]
$z0 -> [$z0 = 0]
$r13 -> [$r5 = $r4.<java.util.LinkedList$Entry: java.lang.Object element>]
$z0 -> [$z0 = 0]
$r13 -> [$r1 = $r0.<java.util.TreeMap$Entry: java.lang.Object key>]
@parameter0: org.junit.internal.JUnitSystem -> [system := @parameter0: org.junit.internal.JUnitSystem]
$z0 -> [$z0 = 1]
$z0 -> [$z0 = 1]
$r13 -> [$r2 = l4.<java.util.Hashtable$Entry: java.lang.Object key>]
-----------------------------
Time elapsed: 718.609391758
Transforming SimpleTest... 
Transforming ExitTest... 
Transforming DeleteInOutLoopTest... 
Transforming FuncTypeTest... 
Transforming DeleteAssignmentInLoopTest... 
Transforming TestRemoveLeakingCall... 
Transforming TestRemoveLeakInFunction... 
Transforming TestRemoveLeak... 
Transforming TestRemoveNoLeakCall... 
Transforming org.junit.internal.TextListener... 
Transforming org.junit.runner.JUnitCore... 
Soot finished on Tue Mar 26 19:33:33 CET 2013
Soot has run for 12 min. 42 sec.
removeAssignmentJU_Propagate finished.
Test run was successful
